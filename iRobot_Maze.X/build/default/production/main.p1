Version 3.2 HI-TECH Software Intermediate Code
"11 ADC.h
[v _ADCMain `(v ~T0 @X0 0 ef ]
"35 ser.h
[v _DriveDirect `(v ~T0 @X0 0 ef2`i`i ]
[v F1091 `(v ~T0 @X0 1 tf1`ul ]
"152 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic.h
[v __delay `JF1091 ~T0 @X0 0 e ]
[p i __delay ]
"27 LCD.h
[v _lcdSetCursor `(v ~T0 @X0 0 ef1`uc ]
"30
[v _lcdWriteString `(v ~T0 @X0 0 ef1`*uc ]
"2517 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f877a.h
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"2519
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
"38 ser.h
[v _getSensorData `(i ~T0 @X0 0 ef2`uc`uc ]
"27
[v _ser_putch `(v ~T0 @X0 0 ef1`uc ]
"33
[v _Drive `(v ~T0 @X0 0 ef4`uc`uc`uc`uc ]
"2651 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f877a.h
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"55
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"2513
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
"2515
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
[p mainexit ]
"24 ser.h
[v _ser_init `(v ~T0 @X0 0 ef ]
"12 SPI.h
[v _setupSPI `(v ~T0 @X0 0 ef ]
"36 LCD.h
[v _setupLCD `(v ~T0 @X0 0 ef ]
"12 ADC.h
[v _setupADC `(v ~T0 @X0 0 ef ]
"1337 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f877a.h
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"209
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"13 SPI.h
[v _spi_transfer `(uc ~T0 @X0 0 ef1`uc ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f877a.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f877a.h
[; ;pic16f877a.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f877a.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f877a.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f877a.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f877a.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f877a.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f877a.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f877a.h: 72: typedef union {
[; ;pic16f877a.h: 73: struct {
[; ;pic16f877a.h: 74: unsigned C :1;
[; ;pic16f877a.h: 75: unsigned DC :1;
[; ;pic16f877a.h: 76: unsigned Z :1;
[; ;pic16f877a.h: 77: unsigned nPD :1;
[; ;pic16f877a.h: 78: unsigned nTO :1;
[; ;pic16f877a.h: 79: unsigned RP :2;
[; ;pic16f877a.h: 80: unsigned IRP :1;
[; ;pic16f877a.h: 81: };
[; ;pic16f877a.h: 82: struct {
[; ;pic16f877a.h: 83: unsigned :5;
[; ;pic16f877a.h: 84: unsigned RP0 :1;
[; ;pic16f877a.h: 85: unsigned RP1 :1;
[; ;pic16f877a.h: 86: };
[; ;pic16f877a.h: 87: struct {
[; ;pic16f877a.h: 88: unsigned CARRY :1;
[; ;pic16f877a.h: 89: };
[; ;pic16f877a.h: 90: struct {
[; ;pic16f877a.h: 91: unsigned :2;
[; ;pic16f877a.h: 92: unsigned ZERO :1;
[; ;pic16f877a.h: 93: };
[; ;pic16f877a.h: 94: } STATUSbits_t;
[; ;pic16f877a.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f877a.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f877a.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f877a.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f877a.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f877a.h: 165: typedef union {
[; ;pic16f877a.h: 166: struct {
[; ;pic16f877a.h: 167: unsigned RA0 :1;
[; ;pic16f877a.h: 168: unsigned RA1 :1;
[; ;pic16f877a.h: 169: unsigned RA2 :1;
[; ;pic16f877a.h: 170: unsigned RA3 :1;
[; ;pic16f877a.h: 171: unsigned RA4 :1;
[; ;pic16f877a.h: 172: unsigned RA5 :1;
[; ;pic16f877a.h: 173: };
[; ;pic16f877a.h: 174: } PORTAbits_t;
[; ;pic16f877a.h: 175: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f877a.h: 209: extern volatile unsigned char PORTB @ 0x006;
"211
[; ;pic16f877a.h: 211: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f877a.h: 214: typedef union {
[; ;pic16f877a.h: 215: struct {
[; ;pic16f877a.h: 216: unsigned RB0 :1;
[; ;pic16f877a.h: 217: unsigned RB1 :1;
[; ;pic16f877a.h: 218: unsigned RB2 :1;
[; ;pic16f877a.h: 219: unsigned RB3 :1;
[; ;pic16f877a.h: 220: unsigned RB4 :1;
[; ;pic16f877a.h: 221: unsigned RB5 :1;
[; ;pic16f877a.h: 222: unsigned RB6 :1;
[; ;pic16f877a.h: 223: unsigned RB7 :1;
[; ;pic16f877a.h: 224: };
[; ;pic16f877a.h: 225: } PORTBbits_t;
[; ;pic16f877a.h: 226: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f877a.h: 270: extern volatile unsigned char PORTC @ 0x007;
"272
[; ;pic16f877a.h: 272: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f877a.h: 275: typedef union {
[; ;pic16f877a.h: 276: struct {
[; ;pic16f877a.h: 277: unsigned RC0 :1;
[; ;pic16f877a.h: 278: unsigned RC1 :1;
[; ;pic16f877a.h: 279: unsigned RC2 :1;
[; ;pic16f877a.h: 280: unsigned RC3 :1;
[; ;pic16f877a.h: 281: unsigned RC4 :1;
[; ;pic16f877a.h: 282: unsigned RC5 :1;
[; ;pic16f877a.h: 283: unsigned RC6 :1;
[; ;pic16f877a.h: 284: unsigned RC7 :1;
[; ;pic16f877a.h: 285: };
[; ;pic16f877a.h: 286: } PORTCbits_t;
[; ;pic16f877a.h: 287: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f877a.h: 331: extern volatile unsigned char PORTD @ 0x008;
"333
[; ;pic16f877a.h: 333: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f877a.h: 336: typedef union {
[; ;pic16f877a.h: 337: struct {
[; ;pic16f877a.h: 338: unsigned RD0 :1;
[; ;pic16f877a.h: 339: unsigned RD1 :1;
[; ;pic16f877a.h: 340: unsigned RD2 :1;
[; ;pic16f877a.h: 341: unsigned RD3 :1;
[; ;pic16f877a.h: 342: unsigned RD4 :1;
[; ;pic16f877a.h: 343: unsigned RD5 :1;
[; ;pic16f877a.h: 344: unsigned RD6 :1;
[; ;pic16f877a.h: 345: unsigned RD7 :1;
[; ;pic16f877a.h: 346: };
[; ;pic16f877a.h: 347: } PORTDbits_t;
[; ;pic16f877a.h: 348: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f877a.h: 392: extern volatile unsigned char PORTE @ 0x009;
"394
[; ;pic16f877a.h: 394: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f877a.h: 397: typedef union {
[; ;pic16f877a.h: 398: struct {
[; ;pic16f877a.h: 399: unsigned RE0 :1;
[; ;pic16f877a.h: 400: unsigned RE1 :1;
[; ;pic16f877a.h: 401: unsigned RE2 :1;
[; ;pic16f877a.h: 402: };
[; ;pic16f877a.h: 403: } PORTEbits_t;
[; ;pic16f877a.h: 404: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f877a.h: 423: extern volatile unsigned char PCLATH @ 0x00A;
"425
[; ;pic16f877a.h: 425: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f877a.h: 428: typedef union {
[; ;pic16f877a.h: 429: struct {
[; ;pic16f877a.h: 430: unsigned PCLATH :5;
[; ;pic16f877a.h: 431: };
[; ;pic16f877a.h: 432: } PCLATHbits_t;
[; ;pic16f877a.h: 433: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f877a.h: 442: extern volatile unsigned char INTCON @ 0x00B;
"444
[; ;pic16f877a.h: 444: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f877a.h: 447: typedef union {
[; ;pic16f877a.h: 448: struct {
[; ;pic16f877a.h: 449: unsigned RBIF :1;
[; ;pic16f877a.h: 450: unsigned INTF :1;
[; ;pic16f877a.h: 451: unsigned TMR0IF :1;
[; ;pic16f877a.h: 452: unsigned RBIE :1;
[; ;pic16f877a.h: 453: unsigned INTE :1;
[; ;pic16f877a.h: 454: unsigned TMR0IE :1;
[; ;pic16f877a.h: 455: unsigned PEIE :1;
[; ;pic16f877a.h: 456: unsigned GIE :1;
[; ;pic16f877a.h: 457: };
[; ;pic16f877a.h: 458: struct {
[; ;pic16f877a.h: 459: unsigned :2;
[; ;pic16f877a.h: 460: unsigned T0IF :1;
[; ;pic16f877a.h: 461: unsigned :2;
[; ;pic16f877a.h: 462: unsigned T0IE :1;
[; ;pic16f877a.h: 463: };
[; ;pic16f877a.h: 464: } INTCONbits_t;
[; ;pic16f877a.h: 465: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f877a.h: 519: extern volatile unsigned char PIR1 @ 0x00C;
"521
[; ;pic16f877a.h: 521: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f877a.h: 524: typedef union {
[; ;pic16f877a.h: 525: struct {
[; ;pic16f877a.h: 526: unsigned TMR1IF :1;
[; ;pic16f877a.h: 527: unsigned TMR2IF :1;
[; ;pic16f877a.h: 528: unsigned CCP1IF :1;
[; ;pic16f877a.h: 529: unsigned SSPIF :1;
[; ;pic16f877a.h: 530: unsigned TXIF :1;
[; ;pic16f877a.h: 531: unsigned RCIF :1;
[; ;pic16f877a.h: 532: unsigned ADIF :1;
[; ;pic16f877a.h: 533: unsigned PSPIF :1;
[; ;pic16f877a.h: 534: };
[; ;pic16f877a.h: 535: } PIR1bits_t;
[; ;pic16f877a.h: 536: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f877a.h: 580: extern volatile unsigned char PIR2 @ 0x00D;
"582
[; ;pic16f877a.h: 582: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f877a.h: 585: typedef union {
[; ;pic16f877a.h: 586: struct {
[; ;pic16f877a.h: 587: unsigned CCP2IF :1;
[; ;pic16f877a.h: 588: unsigned :2;
[; ;pic16f877a.h: 589: unsigned BCLIF :1;
[; ;pic16f877a.h: 590: unsigned EEIF :1;
[; ;pic16f877a.h: 591: unsigned :1;
[; ;pic16f877a.h: 592: unsigned CMIF :1;
[; ;pic16f877a.h: 593: };
[; ;pic16f877a.h: 594: } PIR2bits_t;
[; ;pic16f877a.h: 595: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f877a.h: 619: extern volatile unsigned short TMR1 @ 0x00E;
"621
[; ;pic16f877a.h: 621: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f877a.h: 625: extern volatile unsigned char TMR1L @ 0x00E;
"627
[; ;pic16f877a.h: 627: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f877a.h: 631: extern volatile unsigned char TMR1H @ 0x00F;
"633
[; ;pic16f877a.h: 633: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f877a.h: 637: extern volatile unsigned char T1CON @ 0x010;
"639
[; ;pic16f877a.h: 639: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f877a.h: 642: typedef union {
[; ;pic16f877a.h: 643: struct {
[; ;pic16f877a.h: 644: unsigned TMR1ON :1;
[; ;pic16f877a.h: 645: unsigned TMR1CS :1;
[; ;pic16f877a.h: 646: unsigned nT1SYNC :1;
[; ;pic16f877a.h: 647: unsigned T1OSCEN :1;
[; ;pic16f877a.h: 648: unsigned T1CKPS :2;
[; ;pic16f877a.h: 649: };
[; ;pic16f877a.h: 650: struct {
[; ;pic16f877a.h: 651: unsigned :2;
[; ;pic16f877a.h: 652: unsigned T1SYNC :1;
[; ;pic16f877a.h: 653: unsigned :1;
[; ;pic16f877a.h: 654: unsigned T1CKPS0 :1;
[; ;pic16f877a.h: 655: unsigned T1CKPS1 :1;
[; ;pic16f877a.h: 656: };
[; ;pic16f877a.h: 657: struct {
[; ;pic16f877a.h: 658: unsigned :2;
[; ;pic16f877a.h: 659: unsigned T1INSYNC :1;
[; ;pic16f877a.h: 660: };
[; ;pic16f877a.h: 661: } T1CONbits_t;
[; ;pic16f877a.h: 662: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f877a.h: 711: extern volatile unsigned char TMR2 @ 0x011;
"713
[; ;pic16f877a.h: 713: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f877a.h: 717: extern volatile unsigned char T2CON @ 0x012;
"719
[; ;pic16f877a.h: 719: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f877a.h: 722: typedef union {
[; ;pic16f877a.h: 723: struct {
[; ;pic16f877a.h: 724: unsigned T2CKPS :2;
[; ;pic16f877a.h: 725: unsigned TMR2ON :1;
[; ;pic16f877a.h: 726: unsigned TOUTPS :4;
[; ;pic16f877a.h: 727: };
[; ;pic16f877a.h: 728: struct {
[; ;pic16f877a.h: 729: unsigned T2CKPS0 :1;
[; ;pic16f877a.h: 730: unsigned T2CKPS1 :1;
[; ;pic16f877a.h: 731: unsigned :1;
[; ;pic16f877a.h: 732: unsigned TOUTPS0 :1;
[; ;pic16f877a.h: 733: unsigned TOUTPS1 :1;
[; ;pic16f877a.h: 734: unsigned TOUTPS2 :1;
[; ;pic16f877a.h: 735: unsigned TOUTPS3 :1;
[; ;pic16f877a.h: 736: };
[; ;pic16f877a.h: 737: } T2CONbits_t;
[; ;pic16f877a.h: 738: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f877a.h: 787: extern volatile unsigned char SSPBUF @ 0x013;
"789
[; ;pic16f877a.h: 789: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f877a.h: 793: extern volatile unsigned char SSPCON @ 0x014;
"795
[; ;pic16f877a.h: 795: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f877a.h: 798: typedef union {
[; ;pic16f877a.h: 799: struct {
[; ;pic16f877a.h: 800: unsigned SSPM :4;
[; ;pic16f877a.h: 801: unsigned CKP :1;
[; ;pic16f877a.h: 802: unsigned SSPEN :1;
[; ;pic16f877a.h: 803: unsigned SSPOV :1;
[; ;pic16f877a.h: 804: unsigned WCOL :1;
[; ;pic16f877a.h: 805: };
[; ;pic16f877a.h: 806: struct {
[; ;pic16f877a.h: 807: unsigned SSPM0 :1;
[; ;pic16f877a.h: 808: unsigned SSPM1 :1;
[; ;pic16f877a.h: 809: unsigned SSPM2 :1;
[; ;pic16f877a.h: 810: unsigned SSPM3 :1;
[; ;pic16f877a.h: 811: };
[; ;pic16f877a.h: 812: } SSPCONbits_t;
[; ;pic16f877a.h: 813: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f877a.h: 862: extern volatile unsigned short CCPR1 @ 0x015;
"864
[; ;pic16f877a.h: 864: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f877a.h: 868: extern volatile unsigned char CCPR1L @ 0x015;
"870
[; ;pic16f877a.h: 870: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f877a.h: 874: extern volatile unsigned char CCPR1H @ 0x016;
"876
[; ;pic16f877a.h: 876: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f877a.h: 880: extern volatile unsigned char CCP1CON @ 0x017;
"882
[; ;pic16f877a.h: 882: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f877a.h: 885: typedef union {
[; ;pic16f877a.h: 886: struct {
[; ;pic16f877a.h: 887: unsigned CCP1M :4;
[; ;pic16f877a.h: 888: unsigned CCP1Y :1;
[; ;pic16f877a.h: 889: unsigned CCP1X :1;
[; ;pic16f877a.h: 890: };
[; ;pic16f877a.h: 891: struct {
[; ;pic16f877a.h: 892: unsigned CCP1M0 :1;
[; ;pic16f877a.h: 893: unsigned CCP1M1 :1;
[; ;pic16f877a.h: 894: unsigned CCP1M2 :1;
[; ;pic16f877a.h: 895: unsigned CCP1M3 :1;
[; ;pic16f877a.h: 896: };
[; ;pic16f877a.h: 897: } CCP1CONbits_t;
[; ;pic16f877a.h: 898: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f877a.h: 937: extern volatile unsigned char RCSTA @ 0x018;
"939
[; ;pic16f877a.h: 939: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f877a.h: 942: typedef union {
[; ;pic16f877a.h: 943: struct {
[; ;pic16f877a.h: 944: unsigned RX9D :1;
[; ;pic16f877a.h: 945: unsigned OERR :1;
[; ;pic16f877a.h: 946: unsigned FERR :1;
[; ;pic16f877a.h: 947: unsigned ADDEN :1;
[; ;pic16f877a.h: 948: unsigned CREN :1;
[; ;pic16f877a.h: 949: unsigned SREN :1;
[; ;pic16f877a.h: 950: unsigned RX9 :1;
[; ;pic16f877a.h: 951: unsigned SPEN :1;
[; ;pic16f877a.h: 952: };
[; ;pic16f877a.h: 953: struct {
[; ;pic16f877a.h: 954: unsigned RCD8 :1;
[; ;pic16f877a.h: 955: unsigned :5;
[; ;pic16f877a.h: 956: unsigned RC9 :1;
[; ;pic16f877a.h: 957: };
[; ;pic16f877a.h: 958: struct {
[; ;pic16f877a.h: 959: unsigned :6;
[; ;pic16f877a.h: 960: unsigned nRC8 :1;
[; ;pic16f877a.h: 961: };
[; ;pic16f877a.h: 962: struct {
[; ;pic16f877a.h: 963: unsigned :6;
[; ;pic16f877a.h: 964: unsigned RC8_9 :1;
[; ;pic16f877a.h: 965: };
[; ;pic16f877a.h: 966: } RCSTAbits_t;
[; ;pic16f877a.h: 967: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f877a.h: 1031: extern volatile unsigned char TXREG @ 0x019;
"1033
[; ;pic16f877a.h: 1033: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f877a.h: 1037: extern volatile unsigned char RCREG @ 0x01A;
"1039
[; ;pic16f877a.h: 1039: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f877a.h: 1043: extern volatile unsigned short CCPR2 @ 0x01B;
"1045
[; ;pic16f877a.h: 1045: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f877a.h: 1049: extern volatile unsigned char CCPR2L @ 0x01B;
"1051
[; ;pic16f877a.h: 1051: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f877a.h: 1055: extern volatile unsigned char CCPR2H @ 0x01C;
"1057
[; ;pic16f877a.h: 1057: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f877a.h: 1061: extern volatile unsigned char CCP2CON @ 0x01D;
"1063
[; ;pic16f877a.h: 1063: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f877a.h: 1066: typedef union {
[; ;pic16f877a.h: 1067: struct {
[; ;pic16f877a.h: 1068: unsigned CCP2M :4;
[; ;pic16f877a.h: 1069: unsigned CCP2Y :1;
[; ;pic16f877a.h: 1070: unsigned CCP2X :1;
[; ;pic16f877a.h: 1071: };
[; ;pic16f877a.h: 1072: struct {
[; ;pic16f877a.h: 1073: unsigned CCP2M0 :1;
[; ;pic16f877a.h: 1074: unsigned CCP2M1 :1;
[; ;pic16f877a.h: 1075: unsigned CCP2M2 :1;
[; ;pic16f877a.h: 1076: unsigned CCP2M3 :1;
[; ;pic16f877a.h: 1077: };
[; ;pic16f877a.h: 1078: } CCP2CONbits_t;
[; ;pic16f877a.h: 1079: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f877a.h: 1118: extern volatile unsigned char ADRESH @ 0x01E;
"1120
[; ;pic16f877a.h: 1120: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f877a.h: 1124: extern volatile unsigned char ADCON0 @ 0x01F;
"1126
[; ;pic16f877a.h: 1126: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f877a.h: 1129: typedef union {
[; ;pic16f877a.h: 1130: struct {
[; ;pic16f877a.h: 1131: unsigned ADON :1;
[; ;pic16f877a.h: 1132: unsigned :1;
[; ;pic16f877a.h: 1133: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 1134: unsigned CHS :3;
[; ;pic16f877a.h: 1135: unsigned ADCS :2;
[; ;pic16f877a.h: 1136: };
[; ;pic16f877a.h: 1137: struct {
[; ;pic16f877a.h: 1138: unsigned :2;
[; ;pic16f877a.h: 1139: unsigned GO :1;
[; ;pic16f877a.h: 1140: unsigned CHS0 :1;
[; ;pic16f877a.h: 1141: unsigned CHS1 :1;
[; ;pic16f877a.h: 1142: unsigned CHS2 :1;
[; ;pic16f877a.h: 1143: unsigned ADCS0 :1;
[; ;pic16f877a.h: 1144: unsigned ADCS1 :1;
[; ;pic16f877a.h: 1145: };
[; ;pic16f877a.h: 1146: struct {
[; ;pic16f877a.h: 1147: unsigned :2;
[; ;pic16f877a.h: 1148: unsigned nDONE :1;
[; ;pic16f877a.h: 1149: };
[; ;pic16f877a.h: 1150: struct {
[; ;pic16f877a.h: 1151: unsigned :2;
[; ;pic16f877a.h: 1152: unsigned GO_DONE :1;
[; ;pic16f877a.h: 1153: };
[; ;pic16f877a.h: 1154: } ADCON0bits_t;
[; ;pic16f877a.h: 1155: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f877a.h: 1219: extern volatile unsigned char OPTION_REG @ 0x081;
"1221
[; ;pic16f877a.h: 1221: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f877a.h: 1224: typedef union {
[; ;pic16f877a.h: 1225: struct {
[; ;pic16f877a.h: 1226: unsigned PS :3;
[; ;pic16f877a.h: 1227: unsigned PSA :1;
[; ;pic16f877a.h: 1228: unsigned T0SE :1;
[; ;pic16f877a.h: 1229: unsigned T0CS :1;
[; ;pic16f877a.h: 1230: unsigned INTEDG :1;
[; ;pic16f877a.h: 1231: unsigned nRBPU :1;
[; ;pic16f877a.h: 1232: };
[; ;pic16f877a.h: 1233: struct {
[; ;pic16f877a.h: 1234: unsigned PS0 :1;
[; ;pic16f877a.h: 1235: unsigned PS1 :1;
[; ;pic16f877a.h: 1236: unsigned PS2 :1;
[; ;pic16f877a.h: 1237: };
[; ;pic16f877a.h: 1238: } OPTION_REGbits_t;
[; ;pic16f877a.h: 1239: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f877a.h: 1288: extern volatile unsigned char TRISA @ 0x085;
"1290
[; ;pic16f877a.h: 1290: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f877a.h: 1293: typedef union {
[; ;pic16f877a.h: 1294: struct {
[; ;pic16f877a.h: 1295: unsigned TRISA0 :1;
[; ;pic16f877a.h: 1296: unsigned TRISA1 :1;
[; ;pic16f877a.h: 1297: unsigned TRISA2 :1;
[; ;pic16f877a.h: 1298: unsigned TRISA3 :1;
[; ;pic16f877a.h: 1299: unsigned TRISA4 :1;
[; ;pic16f877a.h: 1300: unsigned TRISA5 :1;
[; ;pic16f877a.h: 1301: };
[; ;pic16f877a.h: 1302: } TRISAbits_t;
[; ;pic16f877a.h: 1303: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f877a.h: 1337: extern volatile unsigned char TRISB @ 0x086;
"1339
[; ;pic16f877a.h: 1339: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f877a.h: 1342: typedef union {
[; ;pic16f877a.h: 1343: struct {
[; ;pic16f877a.h: 1344: unsigned TRISB0 :1;
[; ;pic16f877a.h: 1345: unsigned TRISB1 :1;
[; ;pic16f877a.h: 1346: unsigned TRISB2 :1;
[; ;pic16f877a.h: 1347: unsigned TRISB3 :1;
[; ;pic16f877a.h: 1348: unsigned TRISB4 :1;
[; ;pic16f877a.h: 1349: unsigned TRISB5 :1;
[; ;pic16f877a.h: 1350: unsigned TRISB6 :1;
[; ;pic16f877a.h: 1351: unsigned TRISB7 :1;
[; ;pic16f877a.h: 1352: };
[; ;pic16f877a.h: 1353: } TRISBbits_t;
[; ;pic16f877a.h: 1354: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f877a.h: 1398: extern volatile unsigned char TRISC @ 0x087;
"1400
[; ;pic16f877a.h: 1400: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f877a.h: 1403: typedef union {
[; ;pic16f877a.h: 1404: struct {
[; ;pic16f877a.h: 1405: unsigned TRISC0 :1;
[; ;pic16f877a.h: 1406: unsigned TRISC1 :1;
[; ;pic16f877a.h: 1407: unsigned TRISC2 :1;
[; ;pic16f877a.h: 1408: unsigned TRISC3 :1;
[; ;pic16f877a.h: 1409: unsigned TRISC4 :1;
[; ;pic16f877a.h: 1410: unsigned TRISC5 :1;
[; ;pic16f877a.h: 1411: unsigned TRISC6 :1;
[; ;pic16f877a.h: 1412: unsigned TRISC7 :1;
[; ;pic16f877a.h: 1413: };
[; ;pic16f877a.h: 1414: } TRISCbits_t;
[; ;pic16f877a.h: 1415: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f877a.h: 1459: extern volatile unsigned char TRISD @ 0x088;
"1461
[; ;pic16f877a.h: 1461: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f877a.h: 1464: typedef union {
[; ;pic16f877a.h: 1465: struct {
[; ;pic16f877a.h: 1466: unsigned TRISD0 :1;
[; ;pic16f877a.h: 1467: unsigned TRISD1 :1;
[; ;pic16f877a.h: 1468: unsigned TRISD2 :1;
[; ;pic16f877a.h: 1469: unsigned TRISD3 :1;
[; ;pic16f877a.h: 1470: unsigned TRISD4 :1;
[; ;pic16f877a.h: 1471: unsigned TRISD5 :1;
[; ;pic16f877a.h: 1472: unsigned TRISD6 :1;
[; ;pic16f877a.h: 1473: unsigned TRISD7 :1;
[; ;pic16f877a.h: 1474: };
[; ;pic16f877a.h: 1475: } TRISDbits_t;
[; ;pic16f877a.h: 1476: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f877a.h: 1520: extern volatile unsigned char TRISE @ 0x089;
"1522
[; ;pic16f877a.h: 1522: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f877a.h: 1525: typedef union {
[; ;pic16f877a.h: 1526: struct {
[; ;pic16f877a.h: 1527: unsigned TRISE0 :1;
[; ;pic16f877a.h: 1528: unsigned TRISE1 :1;
[; ;pic16f877a.h: 1529: unsigned TRISE2 :1;
[; ;pic16f877a.h: 1530: unsigned :1;
[; ;pic16f877a.h: 1531: unsigned PSPMODE :1;
[; ;pic16f877a.h: 1532: unsigned IBOV :1;
[; ;pic16f877a.h: 1533: unsigned OBF :1;
[; ;pic16f877a.h: 1534: unsigned IBF :1;
[; ;pic16f877a.h: 1535: };
[; ;pic16f877a.h: 1536: } TRISEbits_t;
[; ;pic16f877a.h: 1537: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f877a.h: 1576: extern volatile unsigned char PIE1 @ 0x08C;
"1578
[; ;pic16f877a.h: 1578: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f877a.h: 1581: typedef union {
[; ;pic16f877a.h: 1582: struct {
[; ;pic16f877a.h: 1583: unsigned TMR1IE :1;
[; ;pic16f877a.h: 1584: unsigned TMR2IE :1;
[; ;pic16f877a.h: 1585: unsigned CCP1IE :1;
[; ;pic16f877a.h: 1586: unsigned SSPIE :1;
[; ;pic16f877a.h: 1587: unsigned TXIE :1;
[; ;pic16f877a.h: 1588: unsigned RCIE :1;
[; ;pic16f877a.h: 1589: unsigned ADIE :1;
[; ;pic16f877a.h: 1590: unsigned PSPIE :1;
[; ;pic16f877a.h: 1591: };
[; ;pic16f877a.h: 1592: } PIE1bits_t;
[; ;pic16f877a.h: 1593: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f877a.h: 1637: extern volatile unsigned char PIE2 @ 0x08D;
"1639
[; ;pic16f877a.h: 1639: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f877a.h: 1642: typedef union {
[; ;pic16f877a.h: 1643: struct {
[; ;pic16f877a.h: 1644: unsigned CCP2IE :1;
[; ;pic16f877a.h: 1645: unsigned :2;
[; ;pic16f877a.h: 1646: unsigned BCLIE :1;
[; ;pic16f877a.h: 1647: unsigned EEIE :1;
[; ;pic16f877a.h: 1648: unsigned :1;
[; ;pic16f877a.h: 1649: unsigned CMIE :1;
[; ;pic16f877a.h: 1650: };
[; ;pic16f877a.h: 1651: } PIE2bits_t;
[; ;pic16f877a.h: 1652: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f877a.h: 1676: extern volatile unsigned char PCON @ 0x08E;
"1678
[; ;pic16f877a.h: 1678: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f877a.h: 1681: typedef union {
[; ;pic16f877a.h: 1682: struct {
[; ;pic16f877a.h: 1683: unsigned nBOR :1;
[; ;pic16f877a.h: 1684: unsigned nPOR :1;
[; ;pic16f877a.h: 1685: };
[; ;pic16f877a.h: 1686: struct {
[; ;pic16f877a.h: 1687: unsigned nBO :1;
[; ;pic16f877a.h: 1688: };
[; ;pic16f877a.h: 1689: } PCONbits_t;
[; ;pic16f877a.h: 1690: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f877a.h: 1709: extern volatile unsigned char SSPCON2 @ 0x091;
"1711
[; ;pic16f877a.h: 1711: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f877a.h: 1714: typedef union {
[; ;pic16f877a.h: 1715: struct {
[; ;pic16f877a.h: 1716: unsigned SEN :1;
[; ;pic16f877a.h: 1717: unsigned RSEN :1;
[; ;pic16f877a.h: 1718: unsigned PEN :1;
[; ;pic16f877a.h: 1719: unsigned RCEN :1;
[; ;pic16f877a.h: 1720: unsigned ACKEN :1;
[; ;pic16f877a.h: 1721: unsigned ACKDT :1;
[; ;pic16f877a.h: 1722: unsigned ACKSTAT :1;
[; ;pic16f877a.h: 1723: unsigned GCEN :1;
[; ;pic16f877a.h: 1724: };
[; ;pic16f877a.h: 1725: } SSPCON2bits_t;
[; ;pic16f877a.h: 1726: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f877a.h: 1770: extern volatile unsigned char PR2 @ 0x092;
"1772
[; ;pic16f877a.h: 1772: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f877a.h: 1776: extern volatile unsigned char SSPADD @ 0x093;
"1778
[; ;pic16f877a.h: 1778: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f877a.h: 1782: extern volatile unsigned char SSPSTAT @ 0x094;
"1784
[; ;pic16f877a.h: 1784: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f877a.h: 1787: typedef union {
[; ;pic16f877a.h: 1788: struct {
[; ;pic16f877a.h: 1789: unsigned BF :1;
[; ;pic16f877a.h: 1790: unsigned UA :1;
[; ;pic16f877a.h: 1791: unsigned R_nW :1;
[; ;pic16f877a.h: 1792: unsigned S :1;
[; ;pic16f877a.h: 1793: unsigned P :1;
[; ;pic16f877a.h: 1794: unsigned D_nA :1;
[; ;pic16f877a.h: 1795: unsigned CKE :1;
[; ;pic16f877a.h: 1796: unsigned SMP :1;
[; ;pic16f877a.h: 1797: };
[; ;pic16f877a.h: 1798: struct {
[; ;pic16f877a.h: 1799: unsigned :2;
[; ;pic16f877a.h: 1800: unsigned R :1;
[; ;pic16f877a.h: 1801: unsigned :2;
[; ;pic16f877a.h: 1802: unsigned D :1;
[; ;pic16f877a.h: 1803: };
[; ;pic16f877a.h: 1804: struct {
[; ;pic16f877a.h: 1805: unsigned :2;
[; ;pic16f877a.h: 1806: unsigned I2C_READ :1;
[; ;pic16f877a.h: 1807: unsigned I2C_START :1;
[; ;pic16f877a.h: 1808: unsigned I2C_STOP :1;
[; ;pic16f877a.h: 1809: unsigned I2C_DATA :1;
[; ;pic16f877a.h: 1810: };
[; ;pic16f877a.h: 1811: struct {
[; ;pic16f877a.h: 1812: unsigned :2;
[; ;pic16f877a.h: 1813: unsigned nW :1;
[; ;pic16f877a.h: 1814: unsigned :2;
[; ;pic16f877a.h: 1815: unsigned nA :1;
[; ;pic16f877a.h: 1816: };
[; ;pic16f877a.h: 1817: struct {
[; ;pic16f877a.h: 1818: unsigned :2;
[; ;pic16f877a.h: 1819: unsigned nWRITE :1;
[; ;pic16f877a.h: 1820: unsigned :2;
[; ;pic16f877a.h: 1821: unsigned nADDRESS :1;
[; ;pic16f877a.h: 1822: };
[; ;pic16f877a.h: 1823: struct {
[; ;pic16f877a.h: 1824: unsigned :2;
[; ;pic16f877a.h: 1825: unsigned R_W :1;
[; ;pic16f877a.h: 1826: unsigned :2;
[; ;pic16f877a.h: 1827: unsigned D_A :1;
[; ;pic16f877a.h: 1828: };
[; ;pic16f877a.h: 1829: struct {
[; ;pic16f877a.h: 1830: unsigned :2;
[; ;pic16f877a.h: 1831: unsigned READ_WRITE :1;
[; ;pic16f877a.h: 1832: unsigned :2;
[; ;pic16f877a.h: 1833: unsigned DATA_ADDRESS :1;
[; ;pic16f877a.h: 1834: };
[; ;pic16f877a.h: 1835: } SSPSTATbits_t;
[; ;pic16f877a.h: 1836: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f877a.h: 1950: extern volatile unsigned char TXSTA @ 0x098;
"1952
[; ;pic16f877a.h: 1952: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f877a.h: 1955: typedef union {
[; ;pic16f877a.h: 1956: struct {
[; ;pic16f877a.h: 1957: unsigned TX9D :1;
[; ;pic16f877a.h: 1958: unsigned TRMT :1;
[; ;pic16f877a.h: 1959: unsigned BRGH :1;
[; ;pic16f877a.h: 1960: unsigned :1;
[; ;pic16f877a.h: 1961: unsigned SYNC :1;
[; ;pic16f877a.h: 1962: unsigned TXEN :1;
[; ;pic16f877a.h: 1963: unsigned TX9 :1;
[; ;pic16f877a.h: 1964: unsigned CSRC :1;
[; ;pic16f877a.h: 1965: };
[; ;pic16f877a.h: 1966: struct {
[; ;pic16f877a.h: 1967: unsigned TXD8 :1;
[; ;pic16f877a.h: 1968: unsigned :5;
[; ;pic16f877a.h: 1969: unsigned nTX8 :1;
[; ;pic16f877a.h: 1970: };
[; ;pic16f877a.h: 1971: struct {
[; ;pic16f877a.h: 1972: unsigned :6;
[; ;pic16f877a.h: 1973: unsigned TX8_9 :1;
[; ;pic16f877a.h: 1974: };
[; ;pic16f877a.h: 1975: } TXSTAbits_t;
[; ;pic16f877a.h: 1976: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f877a.h: 2030: extern volatile unsigned char SPBRG @ 0x099;
"2032
[; ;pic16f877a.h: 2032: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f877a.h: 2036: extern volatile unsigned char CMCON @ 0x09C;
"2038
[; ;pic16f877a.h: 2038: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16f877a.h: 2041: typedef union {
[; ;pic16f877a.h: 2042: struct {
[; ;pic16f877a.h: 2043: unsigned CM :3;
[; ;pic16f877a.h: 2044: unsigned CIS :1;
[; ;pic16f877a.h: 2045: unsigned C1INV :1;
[; ;pic16f877a.h: 2046: unsigned C2INV :1;
[; ;pic16f877a.h: 2047: unsigned C1OUT :1;
[; ;pic16f877a.h: 2048: unsigned C2OUT :1;
[; ;pic16f877a.h: 2049: };
[; ;pic16f877a.h: 2050: struct {
[; ;pic16f877a.h: 2051: unsigned CM0 :1;
[; ;pic16f877a.h: 2052: unsigned CM1 :1;
[; ;pic16f877a.h: 2053: unsigned CM2 :1;
[; ;pic16f877a.h: 2054: };
[; ;pic16f877a.h: 2055: } CMCONbits_t;
[; ;pic16f877a.h: 2056: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;pic16f877a.h: 2105: extern volatile unsigned char CVRCON @ 0x09D;
"2107
[; ;pic16f877a.h: 2107: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16f877a.h: 2110: typedef union {
[; ;pic16f877a.h: 2111: struct {
[; ;pic16f877a.h: 2112: unsigned CVR :4;
[; ;pic16f877a.h: 2113: unsigned :1;
[; ;pic16f877a.h: 2114: unsigned CVRR :1;
[; ;pic16f877a.h: 2115: unsigned CVROE :1;
[; ;pic16f877a.h: 2116: unsigned CVREN :1;
[; ;pic16f877a.h: 2117: };
[; ;pic16f877a.h: 2118: struct {
[; ;pic16f877a.h: 2119: unsigned CVR0 :1;
[; ;pic16f877a.h: 2120: unsigned CVR1 :1;
[; ;pic16f877a.h: 2121: unsigned CVR2 :1;
[; ;pic16f877a.h: 2122: unsigned CVR3 :1;
[; ;pic16f877a.h: 2123: };
[; ;pic16f877a.h: 2124: } CVRCONbits_t;
[; ;pic16f877a.h: 2125: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;pic16f877a.h: 2169: extern volatile unsigned char ADRESL @ 0x09E;
"2171
[; ;pic16f877a.h: 2171: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f877a.h: 2175: extern volatile unsigned char ADCON1 @ 0x09F;
"2177
[; ;pic16f877a.h: 2177: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f877a.h: 2180: typedef union {
[; ;pic16f877a.h: 2181: struct {
[; ;pic16f877a.h: 2182: unsigned PCFG :4;
[; ;pic16f877a.h: 2183: unsigned :2;
[; ;pic16f877a.h: 2184: unsigned ADCS2 :1;
[; ;pic16f877a.h: 2185: unsigned ADFM :1;
[; ;pic16f877a.h: 2186: };
[; ;pic16f877a.h: 2187: struct {
[; ;pic16f877a.h: 2188: unsigned PCFG0 :1;
[; ;pic16f877a.h: 2189: unsigned PCFG1 :1;
[; ;pic16f877a.h: 2190: unsigned PCFG2 :1;
[; ;pic16f877a.h: 2191: unsigned PCFG3 :1;
[; ;pic16f877a.h: 2192: };
[; ;pic16f877a.h: 2193: } ADCON1bits_t;
[; ;pic16f877a.h: 2194: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f877a.h: 2233: extern volatile unsigned char EEDATA @ 0x10C;
"2235
[; ;pic16f877a.h: 2235: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f877a.h: 2239: extern volatile unsigned char EEADR @ 0x10D;
"2241
[; ;pic16f877a.h: 2241: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f877a.h: 2245: extern volatile unsigned char EEDATH @ 0x10E;
"2247
[; ;pic16f877a.h: 2247: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f877a.h: 2251: extern volatile unsigned char EEADRH @ 0x10F;
"2253
[; ;pic16f877a.h: 2253: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f877a.h: 2257: extern volatile unsigned char EECON1 @ 0x18C;
"2259
[; ;pic16f877a.h: 2259: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f877a.h: 2262: typedef union {
[; ;pic16f877a.h: 2263: struct {
[; ;pic16f877a.h: 2264: unsigned RD :1;
[; ;pic16f877a.h: 2265: unsigned WR :1;
[; ;pic16f877a.h: 2266: unsigned WREN :1;
[; ;pic16f877a.h: 2267: unsigned WRERR :1;
[; ;pic16f877a.h: 2268: unsigned :3;
[; ;pic16f877a.h: 2269: unsigned EEPGD :1;
[; ;pic16f877a.h: 2270: };
[; ;pic16f877a.h: 2271: } EECON1bits_t;
[; ;pic16f877a.h: 2272: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f877a.h: 2301: extern volatile unsigned char EECON2 @ 0x18D;
"2303
[; ;pic16f877a.h: 2303: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f877a.h: 2313: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f877a.h: 2315: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f877a.h: 2317: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f877a.h: 2319: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f877a.h: 2321: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f877a.h: 2323: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f877a.h: 2325: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f877a.h: 2327: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f877a.h: 2329: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f877a.h: 2331: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f877a.h: 2333: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f877a.h: 2335: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f877a.h: 2337: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f877a.h: 2339: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f877a.h: 2341: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f877a.h: 2343: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f877a.h: 2345: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f877a.h: 2347: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f877a.h: 2349: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f877a.h: 2351: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f877a.h: 2353: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f877a.h: 2355: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f877a.h: 2357: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f877a.h: 2359: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f877a.h: 2361: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f877a.h: 2363: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f877a.h: 2365: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f877a.h: 2367: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f877a.h: 2369: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f877a.h: 2371: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f877a.h: 2373: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f877a.h: 2375: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f877a.h: 2377: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f877a.h: 2379: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f877a.h: 2381: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f877a.h: 2383: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f877a.h: 2385: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f877a.h: 2387: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f877a.h: 2389: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f877a.h: 2391: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f877a.h: 2393: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f877a.h: 2395: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f877a.h: 2397: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f877a.h: 2399: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f877a.h: 2401: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f877a.h: 2403: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f877a.h: 2405: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f877a.h: 2407: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f877a.h: 2409: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f877a.h: 2411: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f877a.h: 2413: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f877a.h: 2415: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f877a.h: 2417: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f877a.h: 2419: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f877a.h: 2421: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f877a.h: 2423: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f877a.h: 2425: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2427: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f877a.h: 2429: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2431: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2433: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f877a.h: 2435: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f877a.h: 2437: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f877a.h: 2439: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f877a.h: 2441: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f877a.h: 2443: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f877a.h: 2445: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2447: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2449: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2451: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2453: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2455: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f877a.h: 2457: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f877a.h: 2459: extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f877a.h: 2461: extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f877a.h: 2463: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f877a.h: 2465: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f877a.h: 2467: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f877a.h: 2469: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f877a.h: 2471: extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f877a.h: 2473: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f877a.h: 2475: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f877a.h: 2477: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f877a.h: 2479: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f877a.h: 2481: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f877a.h: 2483: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f877a.h: 2485: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f877a.h: 2487: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f877a.h: 2489: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f877a.h: 2491: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f877a.h: 2493: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f877a.h: 2495: extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f877a.h: 2497: extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f877a.h: 2499: extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f877a.h: 2501: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f877a.h: 2503: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f877a.h: 2505: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f877a.h: 2507: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f877a.h: 2509: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f877a.h: 2511: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f877a.h: 2513: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f877a.h: 2515: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f877a.h: 2517: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f877a.h: 2519: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f877a.h: 2521: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f877a.h: 2523: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f877a.h: 2525: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f877a.h: 2527: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f877a.h: 2529: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f877a.h: 2531: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f877a.h: 2533: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f877a.h: 2535: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f877a.h: 2537: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f877a.h: 2539: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f877a.h: 2541: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f877a.h: 2543: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f877a.h: 2545: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f877a.h: 2547: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f877a.h: 2549: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2551: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2553: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2555: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f877a.h: 2557: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f877a.h: 2559: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f877a.h: 2561: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f877a.h: 2563: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f877a.h: 2565: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f877a.h: 2567: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f877a.h: 2569: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f877a.h: 2571: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f877a.h: 2573: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f877a.h: 2575: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f877a.h: 2577: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f877a.h: 2579: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f877a.h: 2581: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f877a.h: 2583: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f877a.h: 2585: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2587: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f877a.h: 2589: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f877a.h: 2591: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f877a.h: 2593: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2595: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2597: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2599: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2601: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f877a.h: 2603: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f877a.h: 2605: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f877a.h: 2607: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f877a.h: 2609: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f877a.h: 2611: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f877a.h: 2613: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f877a.h: 2615: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f877a.h: 2617: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f877a.h: 2619: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f877a.h: 2621: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f877a.h: 2623: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f877a.h: 2625: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f877a.h: 2627: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f877a.h: 2629: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2631: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2633: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f877a.h: 2635: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f877a.h: 2637: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f877a.h: 2639: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2641: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f877a.h: 2643: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2645: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f877a.h: 2647: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f877a.h: 2649: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2651: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2653: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f877a.h: 2655: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f877a.h: 2657: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f877a.h: 2659: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f877a.h: 2661: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f877a.h: 2663: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f877a.h: 2665: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f877a.h: 2667: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f877a.h: 2669: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f877a.h: 2671: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f877a.h: 2673: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f877a.h: 2675: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f877a.h: 2677: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f877a.h: 2679: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f877a.h: 2681: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f877a.h: 2683: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f877a.h: 2685: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f877a.h: 2687: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f877a.h: 2689: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f877a.h: 2691: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f877a.h: 2693: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f877a.h: 2695: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f877a.h: 2697: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f877a.h: 2699: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f877a.h: 2701: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f877a.h: 2703: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f877a.h: 2705: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f877a.h: 2707: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f877a.h: 2709: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f877a.h: 2711: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f877a.h: 2713: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f877a.h: 2715: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f877a.h: 2717: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f877a.h: 2719: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f877a.h: 2721: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f877a.h: 2723: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f877a.h: 2725: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f877a.h: 2727: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f877a.h: 2729: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f877a.h: 2731: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f877a.h: 2733: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f877a.h: 2735: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f877a.h: 2737: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f877a.h: 2739: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f877a.h: 2741: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f877a.h: 2743: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2745: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2747: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2749: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2751: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f877a.h: 2753: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f877a.h: 2755: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f877a.h: 2757: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f877a.h: 2759: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f877a.h: 2761: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f877a.h: 2763: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f877a.h: 2765: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f877a.h: 2767: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f877a.h: 2769: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2771: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2773: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2775: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2777: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2779: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f877a.h: 2781: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f877a.h: 2783: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f877a.h: 2785: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2787: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2789: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f877a.h: 2791: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2793: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2795: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 186: extern unsigned char __resetbits;
[; ;pic.h: 187: extern __bit __powerdown;
[; ;pic.h: 188: extern __bit __timeout;
"12 main.h
[p x BOREN=OFF ]
[p x CPD=OFF ]
[p x WRT=OFF ]
[p x FOSC=HS ]
[p x WDTE=OFF ]
[p x CP=OFF ]
[p x LVP=OFF ]
[p x PWRTE=OFF ]
[; ;main.h: 25: void Turn90(char direction);
[; ;main.h: 26: void Drive1m(void);
[; ;main.h: 27: void wallFollow(void);
[; ;main.h: 28: void TravelPath(void);
[; ;main.h: 29: void re_route(void);
"32
[v _time_count `Vui ~T0 @X0 1 e ]
[; ;main.h: 32: volatile unsigned int time_count;
"34
[v _PB8Counter `uc ~T0 @X0 1 e ]
[i _PB8Counter
-> -> 0 `i `uc
]
[; ;main.h: 34: unsigned char PB8Counter = 0;
"35
[v _PB7Counter `uc ~T0 @X0 1 e ]
[i _PB7Counter
-> -> 0 `i `uc
]
[; ;main.h: 35: unsigned char PB7Counter = 0;
"37
[v _highByte `uc ~T0 @X0 1 e ]
[i _highByte
-> -> 0 `i `uc
]
[; ;main.h: 37: unsigned char highByte = 0;
"38
[v _lowByte `uc ~T0 @X0 1 e ]
[i _lowByte
-> -> 0 `i `uc
]
[; ;main.h: 38: unsigned char lowByte = 0;
"40
[v _r `uc ~T0 @X0 1 e ]
[i _r
-> -> 0 `i `uc
]
[; ;main.h: 40: unsigned char r = 0;
"41
[v _c `uc ~T0 @X0 1 e ]
[i _c
-> -> 0 `i `uc
]
[; ;main.h: 41: unsigned char c = 0;
"43
[v _x `uc ~T0 @X0 1 e ]
[i _x
-> -> 1 `i `uc
]
[; ;main.h: 43: unsigned char x = 1;
"44
[v _y `uc ~T0 @X0 1 e ]
[i _y
-> -> 0 `i `uc
]
[; ;main.h: 44: unsigned char y = 0;
"45
[v _orientation `uc ~T0 @X0 1 e ]
[i _orientation
-> -> 3 `i `uc
]
[; ;main.h: 45: unsigned char orientation = 3;
"47
[v _x_target `Vuc ~T0 @X0 1 e ]
[i _x_target
-> -> 0 `i `uc
]
[; ;main.h: 47: volatile unsigned char x_target = 0;
"48
[v _y_target `Vuc ~T0 @X0 1 e ]
[i _y_target
-> -> 0 `i `uc
]
[; ;main.h: 48: volatile unsigned char y_target = 0;
"50
[v _x_path `uc ~T0 @X0 1 e ]
[i _x_path
-> -> 0 `i `uc
]
[; ;main.h: 50: unsigned char x_path = 0;
"51
[v _y_path `uc ~T0 @X0 1 e ]
[i _y_path
-> -> 0 `i `uc
]
[; ;main.h: 51: unsigned char y_path = 0;
"52
[v _orientation_path `uc ~T0 @X0 1 e ]
[i _orientation_path
-> -> 0 `i `uc
]
[; ;main.h: 52: unsigned char orientation_path = 0;
"54
[v _x_int `uc ~T0 @X0 1 e ]
[i _x_int
-> -> 0 `i `uc
]
[; ;main.h: 54: unsigned char x_int = 0;
"55
[v _y_int `uc ~T0 @X0 1 e ]
[i _y_int
-> -> 0 `i `uc
]
[; ;main.h: 55: unsigned char y_int = 0;
"56
[v _intersection_orientation `uc ~T0 @X0 1 e ]
[i _intersection_orientation
-> -> 0 `i `uc
]
[; ;main.h: 56: unsigned char intersection_orientation = 0;
"58
[v _pathCount `uc ~T0 @X0 1 e ]
[i _pathCount
-> -> 0 `i `uc
]
[; ;main.h: 58: unsigned char pathCount = 0;
"59
[v _pathCountShortest `uc ~T0 @X0 1 e ]
[i _pathCountShortest
-> -> 20 `i `uc
]
[; ;main.h: 59: unsigned char pathCountShortest = 20;
"61
[v _IR_Wall `b ~T0 @X0 1 e ]
[i _IR_Wall
-> 0 `i
]
[; ;main.h: 61: bit IR_Wall = 0;
"62
[v _targets `uc ~T0 @X0 1 e ]
[i _targets
-> -> 0 `i `uc
]
[; ;main.h: 62: unsigned char targets = 0;
"64
[v _x_goto `uc ~T0 @X0 1 e ]
[i _x_goto
-> -> 0 `i `uc
]
[; ;main.h: 64: char x_goto = 0;
"65
[v _y_goto `uc ~T0 @X0 1 e ]
[i _y_goto
-> -> 0 `i `uc
]
[; ;main.h: 65: char y_goto = 0;
"67
[v _left `b ~T0 @X0 1 e ]
[i _left
-> 0 `i
]
[; ;main.h: 67: bit left = 0;
"68
[v _right `b ~T0 @X0 1 e ]
[i _right
-> 0 `i
]
[; ;main.h: 68: bit right = 0;
"69
[v _up `b ~T0 @X0 1 e ]
[i _up
-> 0 `i
]
[; ;main.h: 69: bit up = 0;
"70
[v _down `b ~T0 @X0 1 e ]
[i _down
-> 0 `i
]
[; ;main.h: 70: bit down = 0;
"71
[v _reset_flag `b ~T0 @X0 1 e ]
[i _reset_flag
-> 0 `i
]
[; ;main.h: 71: bit reset_flag = 0;
"73
[v _targets_found `b ~T0 @X0 1 e ]
[i _targets_found
-> 0 `i
]
[; ;main.h: 73: bit targets_found = 0;
"76
[v _ADC_ADJUST `ui ~T0 @X0 1 e ]
[i _ADC_ADJUST
-> -> 0 `i `ui
]
[; ;main.h: 76: unsigned int ADC_ADJUST = 0;
"77
[v _CURRENT_SPEED_L `ui ~T0 @X0 1 e ]
[i _CURRENT_SPEED_L
-> -> 150 `i `ui
]
[; ;main.h: 77: unsigned int CURRENT_SPEED_L = 150;
"78
[v _ADJUSTED_SPEED_L `ui ~T0 @X0 1 e ]
[i _ADJUSTED_SPEED_L
-> -> 0 `i `ui
]
[; ;main.h: 78: unsigned int ADJUSTED_SPEED_L = 0;
"79
[v _CURRENT_SPEED_R `ui ~T0 @X0 1 e ]
[i _CURRENT_SPEED_R
-> -> 150 `i `ui
]
[; ;main.h: 79: unsigned int CURRENT_SPEED_R = 150;
"80
[v _ADJUSTED_SPEED_R `ui ~T0 @X0 1 e ]
[i _ADJUSTED_SPEED_R
-> -> 0 `i `ui
]
[; ;main.h: 80: unsigned int ADJUSTED_SPEED_R = 0;
"81
[v _timerLoop `ui ~T0 @X0 1 e ]
[i _timerLoop
-> -> 0 `i `ui
]
[; ;main.h: 81: unsigned int timerLoop = 0;
"82
[v _Distance `ui ~T0 @X0 1 e ]
[i _Distance
-> -> 0 `i `ui
]
[; ;main.h: 82: unsigned int Distance = 0;
[v F1143 `uc ~T0 @X0 -> 16 `i t ]
"88
[v _path `F1143 ~T0 @X0 -> 2 `i e ]
[i _path
:U ..
:U ..
"89
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"90
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 88: char path[2][16] = {
[; ;main.h: 89: {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
[; ;main.h: 90: {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
[; ;main.h: 91: };
[v F1145 `uc ~T0 @X0 -> 16 `i t ]
"94
[v _pathShortest `F1145 ~T0 @X0 -> 2 `i e ]
[i _pathShortest
:U ..
:U ..
"95
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
"96
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
..
]
[; ;main.h: 94: char pathShortest[2][16] = {
[; ;main.h: 95: {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
[; ;main.h: 96: {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
[; ;main.h: 97: };
[v F1147 `uc ~T0 @X0 -> 5 `i t ]
"101
[v _mazeGrid `F1147 ~T0 @X0 -> 4 `i e ]
[i _mazeGrid
:U ..
:U ..
"102
-> -> 12 `i `uc
-> -> 7 `i `uc
-> -> 14 `i `uc
-> -> 13 `i `uc
-> -> 6 `i `uc
..
:U ..
"103
-> -> 9 `i `uc
-> -> 5 `i `uc
-> -> 0 `i `uc
-> -> 5 `i `uc
-> -> 2 `i `uc
..
:U ..
"104
-> -> 12 `i `uc
-> -> 6 `i `uc
-> -> 10 `i `uc
-> -> 14 `i `uc
-> -> 10 `i `uc
..
:U ..
"105
-> -> 11 `i `uc
-> -> 9 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 3 `i `uc
..
..
]
[; ;main.h: 101: char mazeGrid[4][5] = {
[; ;main.h: 102: {12,7,14,13,6},
[; ;main.h: 103: {9,5,0,5,2},
[; ;main.h: 104: {12,6,10,14,10},
[; ;main.h: 105: {11,9,1,1,3}
[; ;main.h: 106: };
[v F1149 `uc ~T0 @X0 -> 5 `i t ]
"109
[v _mazeGridDefault `F1149 ~T0 @X0 -> 4 `i e ]
[i _mazeGridDefault
:U ..
:U ..
"110
-> -> 12 `i `uc
-> -> 7 `i `uc
-> -> 14 `i `uc
-> -> 13 `i `uc
-> -> 6 `i `uc
..
:U ..
"111
-> -> 9 `i `uc
-> -> 5 `i `uc
-> -> 0 `i `uc
-> -> 5 `i `uc
-> -> 2 `i `uc
..
:U ..
"112
-> -> 12 `i `uc
-> -> 6 `i `uc
-> -> 10 `i `uc
-> -> 14 `i `uc
-> -> 10 `i `uc
..
:U ..
"113
-> -> 11 `i `uc
-> -> 9 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 3 `i `uc
..
..
]
[; ;main.h: 109: char mazeGridDefault[4][5] = {
[; ;main.h: 110: {12,7,14,13,6},
[; ;main.h: 111: {9,5,0,5,2},
[; ;main.h: 112: {12,6,10,14,10},
[; ;main.h: 113: {11,9,1,1,3}
[; ;main.h: 114: };
[v F1151 `uc ~T0 @X0 -> 16 `i t ]
"117
[v _gridWalls `F1151 ~T0 @X0 -> 4 `i e ]
[i _gridWalls
:U ..
:U ..
"118
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
..
:U ..
"119
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
..
:U ..
"120
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
..
:U ..
"121
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
..
..
]
[; ;main.h: 117: char gridWalls[4][16] = {
[; ;main.h: 118: {0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1},
[; ;main.h: 119: {0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1},
[; ;main.h: 120: {0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1},
[; ;main.h: 121: {0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1}
[; ;main.h: 122: };
[; ;motor.h: 11: void stepCW(int steps);
[; ;motor.h: 12: void stepCCW(int steps);
"14 motor.h
[v _loop `i ~T0 @X0 1 e ]
[i _loop
-> 0 `i
]
[; ;motor.h: 14: int loop = 0;
[; ;LCD.h: 18: void lcdWriteStepCount(unsigned char stepCountLCD);
[; ;LCD.h: 21: void lcdWriteControl(unsigned char databyte);
[; ;LCD.h: 24: void lcdWriteData(unsigned char databyte);
[; ;LCD.h: 27: void lcdSetCursor(unsigned char address);
[; ;LCD.h: 30: void lcdWriteString(char * s);
[; ;LCD.h: 33: void lcdWriteToDigitBCD(unsigned int data);
[; ;LCD.h: 36: void setupLCD(void);
[; ;ADC.h: 11: void ADCMain(void);
[; ;ADC.h: 12: void setupADC(void);
[; ;ADC.h: 13: unsigned int getADC(void);
[; ;ADC.h: 14: unsigned int adcConvertMM(unsigned int);
"16 ADC.h
[v _adcRAW `Vui ~T0 @X0 1 e ]
[i _adcRAW
-> -> 0 `i `ui
]
[; ;ADC.h: 16: volatile unsigned int adcRAW = 0;
[; ;SPI.h: 12: void setupSPI(void);
[; ;SPI.h: 13: unsigned char spi_transfer(unsigned char data);
"11 ser.h
[v _speedH `uc ~T0 @X0 1 e ]
[i _speedH
-> -> 0 `i `uc
]
[; ;ser.h: 11: unsigned char speedH = 0;
"12
[v _speedL `uc ~T0 @X0 1 e ]
[i _speedL
-> -> 0 `i `uc
]
[; ;ser.h: 12: unsigned char speedL = 0;
"13
[v _radH `uc ~T0 @X0 1 e ]
[i _radH
-> -> 0 `i `uc
]
[; ;ser.h: 13: unsigned char radH = 0;
"14
[v _radL `uc ~T0 @X0 1 e ]
[i _radL
-> -> 0 `i `uc
]
[; ;ser.h: 14: unsigned char radL = 0;
"16
[v _VelocityRight `ui ~T0 @X0 1 e ]
[i _VelocityRight
-> -> 0 `i `ui
]
[; ;ser.h: 16: unsigned int VelocityRight = 0;
"17
[v _VelocityLeft `ui ~T0 @X0 1 e ]
[i _VelocityLeft
-> -> 0 `i `ui
]
[; ;ser.h: 17: unsigned int VelocityLeft = 0;
"18
[v _RightSpeedH `uc ~T0 @X0 1 e ]
[i _RightSpeedH
-> -> 0 `i `uc
]
[; ;ser.h: 18: unsigned char RightSpeedH = 0;
"19
[v _RightSpeedL `uc ~T0 @X0 1 e ]
[i _RightSpeedL
-> -> 0 `i `uc
]
[; ;ser.h: 19: unsigned char RightSpeedL = 0;
"20
[v _LeftSpeedH `uc ~T0 @X0 1 e ]
[i _LeftSpeedH
-> -> 0 `i `uc
]
[; ;ser.h: 20: unsigned char LeftSpeedH = 0;
"21
[v _LeftSpeedL `uc ~T0 @X0 1 e ]
[i _LeftSpeedL
-> -> 0 `i `uc
]
[; ;ser.h: 21: unsigned char LeftSpeedL = 0;
[; ;ser.h: 24: void ser_init(void);
[; ;ser.h: 27: void ser_putch(unsigned char c);
[; ;ser.h: 30: unsigned char ser_getch();
[; ;ser.h: 33: void Drive(unsigned char speedH, unsigned char speedL, unsigned char radH, unsigned char radL);
[; ;ser.h: 35: void DriveDirect(signed int VelocityRight, signed int VelocityLeft);
[; ;ser.h: 38: signed int getSensorData(unsigned char packetID, unsigned char bytes);
"10 main.c
[v _distance `i ~T0 @X0 1 e ]
[i _distance
-> 0 `i
]
[; ;main.c: 10: signed int distance = 0;
"11
[v _angle `i ~T0 @X0 1 e ]
[i _angle
-> 0 `i
]
[; ;main.c: 11: signed int angle = 0;
"14
[v _wallFollow `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 14: void wallFollow(void){
[e :U _wallFollow ]
[f ]
"17
[v _setADCdist `ui ~T0 @X0 1 a ]
[; ;main.c: 17: unsigned int setADCdist = 150;
[e = _setADCdist -> -> 150 `i `ui ]
[; ;main.c: 20: ADCMain();
"20
[e ( _ADCMain ..  ]
[; ;main.c: 21: if(adcRAW < (setADCdist - 40)) {
"21
[e $ ! < _adcRAW - _setADCdist -> -> 40 `i `ui 97  ]
{
[; ;main.c: 22: DriveDirect(CURRENT_SPEED_R,CURRENT_SPEED_L);
"22
[e ( _DriveDirect (2 , -> _CURRENT_SPEED_R `i -> _CURRENT_SPEED_L `i ]
"23
}
[e :U 97 ]
[; ;main.c: 23: }
[; ;main.c: 24: if(adcRAW > setADCdist){
"24
[e $ ! > _adcRAW _setADCdist 98  ]
{
[; ;main.c: 25: while(adcRAW > setADCdist){
"25
[e $U 99  ]
[e :U 100 ]
{
[; ;main.c: 26: ADCMain();
"26
[e ( _ADCMain ..  ]
[; ;main.c: 27: ADC_ADJUST = adcRAW - setADCdist;
"27
[e = _ADC_ADJUST - _adcRAW _setADCdist ]
[; ;main.c: 28: ADJUSTED_SPEED_L = CURRENT_SPEED_L + (7/10)*ADC_ADJUST + (CURRENT_SPEED_L)/(ADC_ADJUST+10);
"28
[e = _ADJUSTED_SPEED_L + + _CURRENT_SPEED_L * -> / -> 7 `i -> 10 `i `ui _ADC_ADJUST / _CURRENT_SPEED_L + _ADC_ADJUST -> -> 10 `i `ui ]
[; ;main.c: 29: DriveDirect(CURRENT_SPEED_R,ADJUSTED_SPEED_L);
"29
[e ( _DriveDirect (2 , -> _CURRENT_SPEED_R `i -> _ADJUSTED_SPEED_L `i ]
"30
}
[e :U 99 ]
"25
[e $ > _adcRAW _setADCdist 100  ]
[e :U 101 ]
"31
}
[; ;main.c: 30: }
[; ;main.c: 31: }
[e $U 102  ]
"32
[e :U 98 ]
[; ;main.c: 32: else if (adcRAW < setADCdist){
[e $ ! < _adcRAW _setADCdist 103  ]
{
[; ;main.c: 33: while(adcRAW < setADCdist){
"33
[e $U 104  ]
[e :U 105 ]
{
[; ;main.c: 34: ADCMain();
"34
[e ( _ADCMain ..  ]
[; ;main.c: 35: ADC_ADJUST = setADCdist - adcRAW;
"35
[e = _ADC_ADJUST - _setADCdist _adcRAW ]
[; ;main.c: 36: ADJUSTED_SPEED_R = CURRENT_SPEED_R + (7/10)*ADC_ADJUST + (CURRENT_SPEED_R)/(ADC_ADJUST+10);
"36
[e = _ADJUSTED_SPEED_R + + _CURRENT_SPEED_R * -> / -> 7 `i -> 10 `i `ui _ADC_ADJUST / _CURRENT_SPEED_R + _ADC_ADJUST -> -> 10 `i `ui ]
[; ;main.c: 37: DriveDirect(ADJUSTED_SPEED_R,CURRENT_SPEED_L);
"37
[e ( _DriveDirect (2 , -> _ADJUSTED_SPEED_R `i -> _CURRENT_SPEED_L `i ]
[; ;main.c: 38: _delay((unsigned long)((100)*(20000000/4000.0)));
"38
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"39
}
[e :U 104 ]
"33
[e $ < _adcRAW _setADCdist 105  ]
[e :U 106 ]
"40
}
[e :U 103 ]
"42
[e :U 102 ]
[; ;main.c: 39: }
[; ;main.c: 40: }
[; ;main.c: 42: }
[e :UE 96 ]
}
"46
[v _PathTo `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;main.c: 46: void PathTo(char x_target, char y_target){
[e :U _PathTo ]
[v _x_target `uc ~T0 @X0 1 r1 ]
[v _y_target `uc ~T0 @X0 1 r2 ]
[f ]
[; ;main.c: 50: for (r = 0; r <= 3; r++){
"50
{
[e = _r -> -> 0 `i `uc ]
[e $ <= -> _r `i -> 3 `i 108  ]
[e $U 109  ]
[e :U 108 ]
{
[; ;main.c: 51: for (c = 0; c <= 4; c++){
"51
{
[e = _c -> -> 0 `i `uc ]
[e $ <= -> _c `i -> 4 `i 111  ]
[e $U 112  ]
[e :U 111 ]
{
[; ;main.c: 52: mazeGrid[r][c] = mazeGridDefault[r][c];
"52
[e = *U + &U *U + &U _mazeGrid * -> _r `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _c `ux -> -> # *U &U *U + &U _mazeGrid * -> _r `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux *U + &U *U + &U _mazeGridDefault * -> _r `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux * -> _c `ux -> -> # *U &U *U + &U _mazeGridDefault * -> _r `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux `ui `ux ]
"53
}
"51
[e ++ _c -> -> 1 `i `uc ]
[e $ <= -> _c `i -> 4 `i 111  ]
[e :U 112 ]
"53
}
"54
}
"50
[e ++ _r -> -> 1 `i `uc ]
[e $ <= -> _r `i -> 3 `i 108  ]
[e :U 109 ]
"54
}
[; ;main.c: 53: }
[; ;main.c: 54: }
[; ;main.c: 56: pathCountShortest = 20;
"56
[e = _pathCountShortest -> -> 20 `i `uc ]
[; ;main.c: 57: for (r = 0; r <= 1; r++){
"57
{
[e = _r -> -> 0 `i `uc ]
[e $ <= -> _r `i -> 1 `i 114  ]
[e $U 115  ]
[e :U 114 ]
{
[; ;main.c: 58: for (c = 0; c <= 15; c++){
"58
{
[e = _c -> -> 0 `i `uc ]
[e $ <= -> _c `i -> 15 `i 117  ]
[e $U 118  ]
[e :U 117 ]
{
[; ;main.c: 59: pathShortest[r][c] = 0;
"59
[e = *U + &U *U + &U _pathShortest * -> _r `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux * -> _c `ux -> -> # *U &U *U + &U _pathShortest * -> _r `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux `ui `ux -> -> 0 `i `uc ]
"60
}
"58
[e ++ _c -> -> 1 `i `uc ]
[e $ <= -> _c `i -> 15 `i 117  ]
[e :U 118 ]
"60
}
"61
}
"57
[e ++ _r -> -> 1 `i `uc ]
[e $ <= -> _r `i -> 1 `i 114  ]
[e :U 115 ]
"61
}
[; ;main.c: 60: }
[; ;main.c: 61: }
[; ;main.c: 64: x_goto = x_target;
"64
[e = _x_goto _x_target ]
[; ;main.c: 65: y_goto = y_target;
"65
[e = _y_goto _y_target ]
[; ;main.c: 67: x_path = x;
"67
[e = _x_path _x ]
[; ;main.c: 68: y_path = y;
"68
[e = _y_path _y ]
[; ;main.c: 69: orientation_path = orientation;
"69
[e = _orientation_path _orientation ]
[; ;main.c: 71: pathCount = 0;
"71
[e = _pathCount -> -> 0 `i `uc ]
[; ;main.c: 74: lcdSetCursor(0b10000000);
"74
[e ( _lcdSetCursor (1 -> -> 128 `i `uc ]
[; ;main.c: 75: lcdWriteString("Working...");
"75
[e ( _lcdWriteString (1 -> :s 1C `*uc ]
[; ;main.c: 77: for (int loop = 0; loop <= 2000; loop++){
"77
{
[v _loop `i ~T0 @X0 1 a ]
[e = _loop -> 0 `i ]
[e $ <= _loop -> 2000 `i 120  ]
[e $U 121  ]
[e :U 120 ]
{
[; ;main.c: 79: reset_flag = 0;
"79
[e = _reset_flag -> -> 0 `i `b ]
[; ;main.c: 81: path[0][pathCount] = x_path;
"81
[e = *U + &U *U + &U _path * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux * -> _pathCount `ux -> -> # *U &U *U + &U _path * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux `ui `ux _x_path ]
[; ;main.c: 82: path[1][pathCount] = y_path;
"82
[e = *U + &U *U + &U _path * -> -> -> 1 `i `ui `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux * -> _pathCount `ux -> -> # *U &U *U + &U _path * -> -> -> 1 `i `ui `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux `ui `ux _y_path ]
[; ;main.c: 87: left = gridWalls[0][(mazeGrid[y_path][x_path])];
"87
[e = _left -> *U + &U *U + &U _gridWalls * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U _gridWalls `ui -> -> 16 `i `ui `ux * -> *U + &U *U + &U _mazeGrid * -> _y_path `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_path `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_path `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `ux -> -> # *U &U *U + &U _gridWalls * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U _gridWalls `ui -> -> 16 `i `ui `ux `ui `ux `b ]
[; ;main.c: 88: up = gridWalls[1][(mazeGrid[y_path][x_path])];
"88
[e = _up -> *U + &U *U + &U _gridWalls * -> -> -> 1 `i `ui `ux -> * -> # *U &U *U &U _gridWalls `ui -> -> 16 `i `ui `ux * -> *U + &U *U + &U _mazeGrid * -> _y_path `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_path `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_path `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `ux -> -> # *U &U *U + &U _gridWalls * -> -> -> 1 `i `ui `ux -> * -> # *U &U *U &U _gridWalls `ui -> -> 16 `i `ui `ux `ui `ux `b ]
[; ;main.c: 89: right = gridWalls[2][(mazeGrid[y_path][x_path])];
"89
[e = _right -> *U + &U *U + &U _gridWalls * -> -> -> 2 `i `ui `ux -> * -> # *U &U *U &U _gridWalls `ui -> -> 16 `i `ui `ux * -> *U + &U *U + &U _mazeGrid * -> _y_path `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_path `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_path `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `ux -> -> # *U &U *U + &U _gridWalls * -> -> -> 2 `i `ui `ux -> * -> # *U &U *U &U _gridWalls `ui -> -> 16 `i `ui `ux `ui `ux `b ]
[; ;main.c: 90: down = gridWalls[3][(mazeGrid[y_path][x_path])];
"90
[e = _down -> *U + &U *U + &U _gridWalls * -> -> -> 3 `i `ui `ux -> * -> # *U &U *U &U _gridWalls `ui -> -> 16 `i `ui `ux * -> *U + &U *U + &U _mazeGrid * -> _y_path `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_path `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_path `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `ux -> -> # *U &U *U + &U _gridWalls * -> -> -> 3 `i `ui `ux -> * -> # *U &U *U &U _gridWalls `ui -> -> 16 `i `ui `ux `ui `ux `b ]
[; ;main.c: 94: if (pathCount != 0){
"94
[e $ ! != -> _pathCount `i -> 0 `i 123  ]
{
[; ;main.c: 95: switch(orientation_path){
"95
[e $U 125  ]
{
[; ;main.c: 96: case 0: down = 1;
"96
[e :U 126 ]
[e = _down -> -> 1 `i `b ]
[; ;main.c: 97: break;
"97
[e $U 124  ]
[; ;main.c: 98: case 1: left = 1;
"98
[e :U 127 ]
[e = _left -> -> 1 `i `b ]
[; ;main.c: 99: break;
"99
[e $U 124  ]
[; ;main.c: 100: case 2: up = 1;
"100
[e :U 128 ]
[e = _up -> -> 1 `i `b ]
[; ;main.c: 101: break;
"101
[e $U 124  ]
[; ;main.c: 102: case 3: right = 1;
"102
[e :U 129 ]
[e = _right -> -> 1 `i `b ]
[; ;main.c: 103: break;
"103
[e $U 124  ]
"104
}
[; ;main.c: 104: }
[e $U 124  ]
"95
[e :U 125 ]
[e [\ _orientation_path , $ -> -> 0 `i `uc 126
 , $ -> -> 1 `i `uc 127
 , $ -> -> 2 `i `uc 128
 , $ -> -> 3 `i `uc 129
 124 ]
"104
[e :U 124 ]
"105
}
[e :U 123 ]
"109
[v _sum `uc ~T0 @X0 1 a ]
[; ;main.c: 105: }
[; ;main.c: 109: char sum = (left + up + down + right);
[e = _sum -> + + + -> _left `i -> _up `i -> _down `i -> _right `i `uc ]
[; ;main.c: 110: if(sum <= 2){
"110
[e $ ! <= -> _sum `i -> 2 `i 130  ]
{
[; ;main.c: 111: x_int = x_path;
"111
[e = _x_int _x_path ]
[; ;main.c: 112: y_int = y_path;
"112
[e = _y_int _y_path ]
[; ;main.c: 118: if (left == 0)
"118
[e $ ! == -> _left `i -> 0 `i 131  ]
[; ;main.c: 119: intersection_orientation = 3;
"119
[e = _intersection_orientation -> -> 3 `i `uc ]
[e $U 132  ]
"120
[e :U 131 ]
[; ;main.c: 120: else if (up == 0)
[e $ ! == -> _up `i -> 0 `i 133  ]
[; ;main.c: 121: intersection_orientation = 0;
"121
[e = _intersection_orientation -> -> 0 `i `uc ]
[e $U 134  ]
"122
[e :U 133 ]
[; ;main.c: 122: else if (right == 0)
[e $ ! == -> _right `i -> 0 `i 135  ]
[; ;main.c: 123: intersection_orientation = 1;
"123
[e = _intersection_orientation -> -> 1 `i `uc ]
[e $U 136  ]
"124
[e :U 135 ]
[; ;main.c: 124: else if (down == 0)
[e $ ! == -> _down `i -> 0 `i 137  ]
[; ;main.c: 125: intersection_orientation = 2;
"125
[e = _intersection_orientation -> -> 2 `i `uc ]
[e :U 137 ]
"126
[e :U 136 ]
[e :U 134 ]
[e :U 132 ]
}
[e :U 130 ]
[; ;main.c: 126: }
[; ;main.c: 133: if ((x_path == x_target)){
"133
[e $ ! == -> _x_path `i -> _x_target `i 138  ]
{
[; ;main.c: 134: if (y_path == y_target){
"134
[e $ ! == -> _y_path `i -> _y_target `i 139  ]
{
[; ;main.c: 138: if(pathCount < pathCountShortest){
"138
[e $ ! < -> _pathCount `i -> _pathCountShortest `i 140  ]
{
[; ;main.c: 139: pathCountShortest = pathCount;
"139
[e = _pathCountShortest _pathCount ]
[; ;main.c: 140: for (r = 0; r <= 1; r++){
"140
{
[e = _r -> -> 0 `i `uc ]
[e $ <= -> _r `i -> 1 `i 141  ]
[e $U 142  ]
[e :U 141 ]
{
[; ;main.c: 141: for (c = 0; c <= 15; c++){
"141
{
[e = _c -> -> 0 `i `uc ]
[e $ <= -> _c `i -> 15 `i 144  ]
[e $U 145  ]
[e :U 144 ]
{
[; ;main.c: 142: pathShortest[r][c] = path[r][c];
"142
[e = *U + &U *U + &U _pathShortest * -> _r `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux * -> _c `ux -> -> # *U &U *U + &U _pathShortest * -> _r `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux `ui `ux *U + &U *U + &U _path * -> _r `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux * -> _c `ux -> -> # *U &U *U + &U _path * -> _r `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux `ui `ux ]
"143
}
"141
[e ++ _c -> -> 1 `i `uc ]
[e $ <= -> _c `i -> 15 `i 144  ]
[e :U 145 ]
"143
}
"144
}
"140
[e ++ _r -> -> 1 `i `uc ]
[e $ <= -> _r `i -> 1 `i 141  ]
[e :U 142 ]
"144
}
"145
}
[e :U 140 ]
[; ;main.c: 143: }
[; ;main.c: 144: }
[; ;main.c: 145: }
[; ;main.c: 151: switch(intersection_orientation){
"151
[e $U 148  ]
{
[; ;main.c: 152: case 0: (mazeGrid[y_int][x_int]) = ((mazeGrid[y_int][x_int]) + 4);
"152
[e :U 149 ]
[e = *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `i -> 4 `i `uc ]
[; ;main.c: 153: break;
"153
[e $U 147  ]
[; ;main.c: 154: case 1: (mazeGrid[y_int][x_int]) = ((mazeGrid[y_int][x_int]) + 2);
"154
[e :U 150 ]
[e = *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `i -> 2 `i `uc ]
[; ;main.c: 155: break;
"155
[e $U 147  ]
[; ;main.c: 156: case 2: (mazeGrid[y_int][x_int]) = ((mazeGrid[y_int][x_int]) + 1);
"156
[e :U 151 ]
[e = *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `i -> 1 `i `uc ]
[; ;main.c: 157: break;
"157
[e $U 147  ]
[; ;main.c: 158: case 3: (mazeGrid[y_int][x_int]) = ((mazeGrid[y_int][x_int]) + 8);
"158
[e :U 152 ]
[e = *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `i -> 8 `i `uc ]
[; ;main.c: 159: break;
"159
[e $U 147  ]
"160
}
[; ;main.c: 160: }
[e $U 147  ]
"151
[e :U 148 ]
[e [\ _intersection_orientation , $ -> -> 0 `i `uc 149
 , $ -> -> 1 `i `uc 150
 , $ -> -> 2 `i `uc 151
 , $ -> -> 3 `i `uc 152
 147 ]
"160
[e :U 147 ]
[; ;main.c: 163: x_path = x;
"163
[e = _x_path _x ]
[; ;main.c: 164: y_path = y;
"164
[e = _y_path _y ]
[; ;main.c: 165: orientation_path = orientation;
"165
[e = _orientation_path _orientation ]
[; ;main.c: 166: pathCount = 0;
"166
[e = _pathCount -> -> 0 `i `uc ]
[; ;main.c: 167: reset_flag = 1;
"167
[e = _reset_flag -> -> 1 `i `b ]
[; ;main.c: 170: for (r = 0; r <= 1; r++){
"170
{
[e = _r -> -> 0 `i `uc ]
[e $ <= -> _r `i -> 1 `i 153  ]
[e $U 154  ]
[e :U 153 ]
{
[; ;main.c: 171: for (c = 0; c <= 15; c++){
"171
{
[e = _c -> -> 0 `i `uc ]
[e $ <= -> _c `i -> 15 `i 156  ]
[e $U 157  ]
[e :U 156 ]
{
[; ;main.c: 172: path[r][c] = 0;
"172
[e = *U + &U *U + &U _path * -> _r `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux * -> _c `ux -> -> # *U &U *U + &U _path * -> _r `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux `ui `ux -> -> 0 `i `uc ]
"173
}
"171
[e ++ _c -> -> 1 `i `uc ]
[e $ <= -> _c `i -> 15 `i 156  ]
[e :U 157 ]
"173
}
"174
}
"170
[e ++ _r -> -> 1 `i `uc ]
[e $ <= -> _r `i -> 1 `i 153  ]
[e :U 154 ]
"174
}
"175
}
[e :U 139 ]
"176
}
[e :U 138 ]
[; ;main.c: 173: }
[; ;main.c: 174: }
[; ;main.c: 175: }
[; ;main.c: 176: }
[; ;main.c: 182: if((sum == 4) || (pathCount >= 15)){
"182
[e $ ! || == -> _sum `i -> 4 `i >= -> _pathCount `i -> 15 `i 159  ]
{
[; ;main.c: 185: switch(intersection_orientation){
"185
[e $U 161  ]
{
[; ;main.c: 186: case 0: (mazeGrid[y_int][x_int]) = ((mazeGrid[y_int][x_int]) + 4);
"186
[e :U 162 ]
[e = *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `i -> 4 `i `uc ]
[; ;main.c: 187: break;
"187
[e $U 160  ]
[; ;main.c: 188: case 1: (mazeGrid[y_int][x_int]) = ((mazeGrid[y_int][x_int]) + 2);
"188
[e :U 163 ]
[e = *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `i -> 2 `i `uc ]
[; ;main.c: 189: break;
"189
[e $U 160  ]
[; ;main.c: 190: case 2: (mazeGrid[y_int][x_int]) = ((mazeGrid[y_int][x_int]) + 1);
"190
[e :U 164 ]
[e = *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `i -> 1 `i `uc ]
[; ;main.c: 191: break;
"191
[e $U 160  ]
[; ;main.c: 192: case 3: (mazeGrid[y_int][x_int]) = ((mazeGrid[y_int][x_int]) + 8);
"192
[e :U 165 ]
[e = *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux * -> _x_int `ux -> -> # *U &U *U + &U _mazeGrid * -> _y_int `ux -> * -> # *U &U *U &U _mazeGrid `ui -> -> 5 `i `ui `ux `ui `ux `i -> 8 `i `uc ]
[; ;main.c: 193: break;
"193
[e $U 160  ]
"194
}
[; ;main.c: 194: }
[e $U 160  ]
"185
[e :U 161 ]
[e [\ _intersection_orientation , $ -> -> 0 `i `uc 162
 , $ -> -> 1 `i `uc 163
 , $ -> -> 2 `i `uc 164
 , $ -> -> 3 `i `uc 165
 160 ]
"194
[e :U 160 ]
[; ;main.c: 197: x_path = x;
"197
[e = _x_path _x ]
[; ;main.c: 198: y_path = y;
"198
[e = _y_path _y ]
[; ;main.c: 199: orientation_path = orientation;
"199
[e = _orientation_path _orientation ]
[; ;main.c: 200: pathCount = 0;
"200
[e = _pathCount -> -> 0 `i `uc ]
[; ;main.c: 201: reset_flag = 1;
"201
[e = _reset_flag -> -> 1 `i `b ]
[; ;main.c: 203: for (r = 0; r <= 1; r++){
"203
{
[e = _r -> -> 0 `i `uc ]
[e $ <= -> _r `i -> 1 `i 166  ]
[e $U 167  ]
[e :U 166 ]
{
[; ;main.c: 204: for (c = 0; c <= 15; c++){
"204
{
[e = _c -> -> 0 `i `uc ]
[e $ <= -> _c `i -> 15 `i 169  ]
[e $U 170  ]
[e :U 169 ]
{
[; ;main.c: 205: path[r][c] = 0;
"205
[e = *U + &U *U + &U _path * -> _r `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux * -> _c `ux -> -> # *U &U *U + &U _path * -> _r `ux -> * -> # *U &U *U &U _path `ui -> -> 16 `i `ui `ux `ui `ux -> -> 0 `i `uc ]
"206
}
"204
[e ++ _c -> -> 1 `i `uc ]
[e $ <= -> _c `i -> 15 `i 169  ]
[e :U 170 ]
"206
}
"207
}
"203
[e ++ _r -> -> 1 `i `uc ]
[e $ <= -> _r `i -> 1 `i 166  ]
[e :U 167 ]
"207
}
"208
}
[e :U 159 ]
[; ;main.c: 206: }
[; ;main.c: 207: }
[; ;main.c: 208: }
[; ;main.c: 217: if (reset_flag != 1){
"217
[e $ ! != -> _reset_flag `i -> 1 `i 172  ]
{
[; ;main.c: 220: if(left == 0){
"220
[e $ ! == -> _left `i -> 0 `i 173  ]
{
[; ;main.c: 221: x_path--;
"221
[e -- _x_path -> -> 1 `i `uc ]
[; ;main.c: 222: orientation_path = 3;
"222
[e = _orientation_path -> -> 3 `i `uc ]
[; ;main.c: 223: pathCount++;
"223
[e ++ _pathCount -> -> 1 `i `uc ]
"224
}
[; ;main.c: 224: }
[e $U 174  ]
"225
[e :U 173 ]
[; ;main.c: 225: else if(up == 0){
[e $ ! == -> _up `i -> 0 `i 175  ]
{
[; ;main.c: 226: y_path--;
"226
[e -- _y_path -> -> 1 `i `uc ]
[; ;main.c: 227: orientation_path = 0;
"227
[e = _orientation_path -> -> 0 `i `uc ]
[; ;main.c: 228: pathCount++;
"228
[e ++ _pathCount -> -> 1 `i `uc ]
"229
}
[; ;main.c: 229: }
[e $U 176  ]
"230
[e :U 175 ]
[; ;main.c: 230: else if(right == 0){
[e $ ! == -> _right `i -> 0 `i 177  ]
{
[; ;main.c: 231: x_path++;
"231
[e ++ _x_path -> -> 1 `i `uc ]
[; ;main.c: 232: orientation_path = 1;
"232
[e = _orientation_path -> -> 1 `i `uc ]
[; ;main.c: 233: pathCount++;
"233
[e ++ _pathCount -> -> 1 `i `uc ]
"234
}
[; ;main.c: 234: }
[e $U 178  ]
"235
[e :U 177 ]
[; ;main.c: 235: else if(down == 0){
[e $ ! == -> _down `i -> 0 `i 179  ]
{
[; ;main.c: 236: y_path++;
"236
[e ++ _y_path -> -> 1 `i `uc ]
[; ;main.c: 237: orientation_path = 2;
"237
[e = _orientation_path -> -> 2 `i `uc ]
[; ;main.c: 238: pathCount++;
"238
[e ++ _pathCount -> -> 1 `i `uc ]
"239
}
[e :U 179 ]
"240
[e :U 178 ]
[e :U 176 ]
[e :U 174 ]
}
[e :U 172 ]
"241
}
"77
[e ++ _loop -> 1 `i ]
[e $ <= _loop -> 2000 `i 120  ]
[e :U 121 ]
"241
}
[; ;main.c: 239: }
[; ;main.c: 240: }
[; ;main.c: 241: }
[; ;main.c: 242: }
"242
[e :UE 107 ]
}
"246
[v _Drive1m `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 246: void Drive1m(void){
[e :U _Drive1m ]
[f ]
[; ;main.c: 254: distance = 0;
"254
[e = _distance -> 0 `i ]
[; ;main.c: 255: DriveDirect(250,250);
"255
[e ( _DriveDirect (2 , -> 250 `i -> 250 `i ]
[; ;main.c: 256: RB2 = 1;
"256
[e = _RB2 -> -> 1 `i `b ]
[; ;main.c: 257: RB3 = 1;
"257
[e = _RB3 -> -> 1 `i `b ]
[; ;main.c: 260: while (distance < 1000){
"260
[e $U 181  ]
[e :U 182 ]
{
[; ;main.c: 263: distance = distance + getSensorData(19,2);
"263
[e = _distance + _distance ( _getSensorData (2 , -> -> 19 `i `uc -> -> 2 `i `uc ]
[; ;main.c: 265: if ((getSensorData(13,1)) == 1){
"265
[e $ ! == ( _getSensorData (2 , -> -> 13 `i `uc -> -> 1 `i `uc -> 1 `i 184  ]
{
[; ;main.c: 267: if((getSensorData(17,1)) < 240){
"267
[e $ ! < ( _getSensorData (2 , -> -> 17 `i `uc -> -> 1 `i `uc -> 240 `i 185  ]
{
[; ;main.c: 268: IR_Wall = 1;
"268
[e = _IR_Wall -> -> 1 `i `b ]
[; ;main.c: 269: distance = 1001;
"269
[e = _distance -> 1001 `i ]
[; ;main.c: 270: RB3 = 0;
"270
[e = _RB3 -> -> 0 `i `b ]
"271
}
[e :U 185 ]
"274
[v _omni_IR `uc ~T0 @X0 1 a ]
[; ;main.c: 271: }
[; ;main.c: 274: unsigned char omni_IR = (getSensorData(17,1));
[e = _omni_IR -> ( _getSensorData (2 , -> -> 17 `i `uc -> -> 1 `i `uc `uc ]
[; ;main.c: 275: if (omni_IR == 250 || omni_IR == 246){
"275
[e $ ! || == -> _omni_IR `i -> 250 `i == -> _omni_IR `i -> 246 `i 186  ]
{
[; ;main.c: 277: targets++;
"277
[e ++ _targets -> -> 1 `i `uc ]
[; ;main.c: 279: switch(targets){
"279
[e $U 188  ]
{
[; ;main.c: 280: case 1: ser_putch(141);
"280
[e :U 189 ]
[e ( _ser_putch (1 -> -> 141 `i `uc ]
[; ;main.c: 281: ser_putch(5);
"281
[e ( _ser_putch (1 -> -> 5 `i `uc ]
[; ;main.c: 282: break;
"282
[e $U 187  ]
[; ;main.c: 283: case 2: ser_putch(141);
"283
[e :U 190 ]
[e ( _ser_putch (1 -> -> 141 `i `uc ]
[; ;main.c: 284: ser_putch(3);
"284
[e ( _ser_putch (1 -> -> 3 `i `uc ]
[; ;main.c: 285: targets_found = 1;
"285
[e = _targets_found -> -> 1 `i `b ]
[; ;main.c: 286: break;
"286
[e $U 187  ]
"287
}
[; ;main.c: 287: }
[e $U 187  ]
"279
[e :U 188 ]
[e [\ _targets , $ -> -> 1 `i `uc 189
 , $ -> -> 2 `i `uc 190
 187 ]
"287
[e :U 187 ]
[; ;main.c: 289: _delay((unsigned long)((2000)*(20000000/4000.0)));
"289
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"291
}
[e :U 186 ]
"293
}
[e :U 184 ]
"294
}
[e :U 181 ]
"260
[e $ < _distance -> 1000 `i 182  ]
[e :U 183 ]
[; ;main.c: 291: }
[; ;main.c: 293: }
[; ;main.c: 294: }
[; ;main.c: 297: DriveDirect(0,0);
"297
[e ( _DriveDirect (2 , -> 0 `i -> 0 `i ]
[; ;main.c: 299: if(IR_Wall == 0){
"299
[e $ ! == -> _IR_Wall `i -> 0 `i 191  ]
{
[; ;main.c: 300: switch(orientation){
"300
[e $U 193  ]
{
[; ;main.c: 301: case 0: y--;
"301
[e :U 194 ]
[e -- _y -> -> 1 `i `uc ]
[; ;main.c: 302: break;
"302
[e $U 192  ]
[; ;main.c: 303: case 1: x++;
"303
[e :U 195 ]
[e ++ _x -> -> 1 `i `uc ]
[; ;main.c: 304: break;
"304
[e $U 192  ]
[; ;main.c: 305: case 2: y++;
"305
[e :U 196 ]
[e ++ _y -> -> 1 `i `uc ]
[; ;main.c: 306: break;
"306
[e $U 192  ]
[; ;main.c: 307: case 3: x--;
"307
[e :U 197 ]
[e -- _x -> -> 1 `i `uc ]
[; ;main.c: 308: break;
"308
[e $U 192  ]
"309
}
[; ;main.c: 309: }
[e $U 192  ]
"300
[e :U 193 ]
[e [\ _orientation , $ -> -> 0 `i `uc 194
 , $ -> -> 1 `i `uc 195
 , $ -> -> 2 `i `uc 196
 , $ -> -> 3 `i `uc 197
 192 ]
"309
[e :U 192 ]
[; ;main.c: 310: _delay((unsigned long)((100)*(20000000/4000.0)));
"310
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"311
}
[e :U 191 ]
[; ;main.c: 311: }
[; ;main.c: 316: if (targets_found == 1){
"316
[e $ ! == -> _targets_found `i -> 1 `i 198  ]
{
"317
[v _n `uc ~T0 @X0 1 a ]
[; ;main.c: 317: char n = 20;
[e = _n -> -> 20 `i `uc ]
"318
}
[e :U 198 ]
[; ;main.c: 318: }
[; ;main.c: 319: }
"319
[e :UE 180 ]
}
"323
[v _Turn90 `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 323: void Turn90(char direction){
[e :U _Turn90 ]
[v _direction `uc ~T0 @X0 1 r1 ]
[f ]
[; ;main.c: 325: angle = 0;
"325
[e = _angle -> 0 `i ]
[; ;main.c: 327: if (direction == 1){
"327
[e $ ! == -> _direction `i -> 1 `i 200  ]
{
[; ;main.c: 329: if (orientation == 0)
"329
[e $ ! == -> _orientation `i -> 0 `i 201  ]
[; ;main.c: 330: orientation = 3;
"330
[e = _orientation -> -> 3 `i `uc ]
[e $U 202  ]
"331
[e :U 201 ]
[; ;main.c: 331: else orientation--;
[e -- _orientation -> -> 1 `i `uc ]
[e :U 202 ]
[; ;main.c: 333: Drive(0,150,0x00,0x01);
"333
[e ( _Drive (4 , , , -> -> 0 `i `uc -> -> 150 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 334: while (angle < 86){
"334
[e $U 203  ]
[e :U 204 ]
{
[; ;main.c: 335: angle = angle + getSensorData(20,2);
"335
[e = _angle + _angle ( _getSensorData (2 , -> -> 20 `i `uc -> -> 2 `i `uc ]
"336
}
[e :U 203 ]
"334
[e $ < _angle -> 86 `i 204  ]
[e :U 205 ]
"337
}
[e :U 200 ]
[; ;main.c: 336: }
[; ;main.c: 337: }
[; ;main.c: 339: if (direction == 0){
"339
[e $ ! == -> _direction `i -> 0 `i 206  ]
{
[; ;main.c: 341: if (orientation == 3)
"341
[e $ ! == -> _orientation `i -> 3 `i 207  ]
[; ;main.c: 342: orientation = 0;
"342
[e = _orientation -> -> 0 `i `uc ]
[e $U 208  ]
"343
[e :U 207 ]
[; ;main.c: 343: else orientation++;
[e ++ _orientation -> -> 1 `i `uc ]
[e :U 208 ]
[; ;main.c: 345: Drive(0,150,0xFF,0xFF);
"345
[e ( _Drive (4 , , , -> -> 0 `i `uc -> -> 150 `i `uc -> -> 255 `i `uc -> -> 255 `i `uc ]
[; ;main.c: 346: while (angle > -86){
"346
[e $U 209  ]
[e :U 210 ]
{
[; ;main.c: 347: angle = angle + getSensorData(20,2);
"347
[e = _angle + _angle ( _getSensorData (2 , -> -> 20 `i `uc -> -> 2 `i `uc ]
"348
}
[e :U 209 ]
"346
[e $ > _angle -U -> 86 `i 210  ]
[e :U 211 ]
"349
}
[e :U 206 ]
[; ;main.c: 348: }
[; ;main.c: 349: }
[; ;main.c: 350: DriveDirect(0,0);
"350
[e ( _DriveDirect (2 , -> 0 `i -> 0 `i ]
[; ;main.c: 351: _delay((unsigned long)((100)*(20000000/4000.0)));
"351
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 352: }
"352
[e :UE 199 ]
}
"354
[v _TravelPath `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 354: void TravelPath(void){
[e :U _TravelPath ]
[f ]
[; ;main.c: 356: for (char n = 1; n <= (pathCountShortest); n++){
"356
{
[v _n `uc ~T0 @X0 1 a ]
[e = _n -> -> 1 `i `uc ]
[e $U 216  ]
[e :U 213 ]
{
[; ;main.c: 358: if (pathShortest[0][n] > x){
"358
[e $ ! > -> *U + &U *U + &U _pathShortest * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux * -> _n `ux -> -> # *U &U *U + &U _pathShortest * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux `ui `ux `i -> _x `i 217  ]
{
[; ;main.c: 359: switch (orientation){
"359
[e $U 219  ]
{
[; ;main.c: 360: case 0: Turn90(0);
"360
[e :U 220 ]
[e ( _Turn90 (1 -> -> 0 `i `uc ]
[; ;main.c: 361: break;
"361
[e $U 218  ]
[; ;main.c: 362: case 2: Turn90(1);
"362
[e :U 221 ]
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 363: break;
"363
[e $U 218  ]
[; ;main.c: 364: case 3: Turn90(1);
"364
[e :U 222 ]
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 365: _delay((unsigned long)((5)*(20000000/4000.0)));
"365
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 366: Turn90(1);
"366
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 367: break;
"367
[e $U 218  ]
"368
}
[; ;main.c: 368: }
[e $U 218  ]
"359
[e :U 219 ]
[e [\ _orientation , $ -> -> 0 `i `uc 220
 , $ -> -> 2 `i `uc 221
 , $ -> -> 3 `i `uc 222
 218 ]
"368
[e :U 218 ]
[; ;main.c: 369: Drive1m();
"369
[e ( _Drive1m ..  ]
"370
}
[; ;main.c: 370: }
[e $U 223  ]
"372
[e :U 217 ]
[; ;main.c: 372: else if (pathShortest[0][n] < x){
[e $ ! < -> *U + &U *U + &U _pathShortest * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux * -> _n `ux -> -> # *U &U *U + &U _pathShortest * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux `ui `ux `i -> _x `i 224  ]
{
[; ;main.c: 373: switch (orientation){
"373
[e $U 226  ]
{
[; ;main.c: 374: case 0: Turn90(1);
"374
[e :U 227 ]
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 375: break;
"375
[e $U 225  ]
[; ;main.c: 376: case 2: Turn90(0);
"376
[e :U 228 ]
[e ( _Turn90 (1 -> -> 0 `i `uc ]
[; ;main.c: 377: break;
"377
[e $U 225  ]
[; ;main.c: 378: case 1: Turn90(1);
"378
[e :U 229 ]
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 379: _delay((unsigned long)((5)*(20000000/4000.0)));
"379
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 380: Turn90(1);
"380
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 381: break;
"381
[e $U 225  ]
"382
}
[; ;main.c: 382: }
[e $U 225  ]
"373
[e :U 226 ]
[e [\ _orientation , $ -> -> 0 `i `uc 227
 , $ -> -> 2 `i `uc 228
 , $ -> -> 1 `i `uc 229
 225 ]
"382
[e :U 225 ]
[; ;main.c: 383: Drive1m();
"383
[e ( _Drive1m ..  ]
"384
}
[; ;main.c: 384: }
[e $U 230  ]
"386
[e :U 224 ]
[; ;main.c: 386: else if(pathShortest[1][n] > y){
[e $ ! > -> *U + &U *U + &U _pathShortest * -> -> -> 1 `i `ui `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux * -> _n `ux -> -> # *U &U *U + &U _pathShortest * -> -> -> 1 `i `ui `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux `ui `ux `i -> _y `i 231  ]
{
[; ;main.c: 387: switch(orientation){
"387
[e $U 233  ]
{
[; ;main.c: 388: case 1: Turn90(0);
"388
[e :U 234 ]
[e ( _Turn90 (1 -> -> 0 `i `uc ]
[; ;main.c: 389: break;
"389
[e $U 232  ]
[; ;main.c: 390: case 3: Turn90(1);
"390
[e :U 235 ]
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 391: break;
"391
[e $U 232  ]
[; ;main.c: 392: case 0: Turn90(1);
"392
[e :U 236 ]
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 393: _delay((unsigned long)((5)*(20000000/4000.0)));
"393
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 394: Turn90(1);
"394
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 395: break;
"395
[e $U 232  ]
"396
}
[; ;main.c: 396: }
[e $U 232  ]
"387
[e :U 233 ]
[e [\ _orientation , $ -> -> 1 `i `uc 234
 , $ -> -> 3 `i `uc 235
 , $ -> -> 0 `i `uc 236
 232 ]
"396
[e :U 232 ]
[; ;main.c: 397: Drive1m();
"397
[e ( _Drive1m ..  ]
"398
}
[; ;main.c: 398: }
[e $U 237  ]
"400
[e :U 231 ]
[; ;main.c: 400: else if (pathShortest[1][n] < y){
[e $ ! < -> *U + &U *U + &U _pathShortest * -> -> -> 1 `i `ui `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux * -> _n `ux -> -> # *U &U *U + &U _pathShortest * -> -> -> 1 `i `ui `ux -> * -> # *U &U *U &U _pathShortest `ui -> -> 16 `i `ui `ux `ui `ux `i -> _y `i 238  ]
{
[; ;main.c: 401: switch (orientation){
"401
[e $U 240  ]
{
[; ;main.c: 402: case 1: Turn90(1);
"402
[e :U 241 ]
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 403: break;
"403
[e $U 239  ]
[; ;main.c: 404: case 3: Turn90(0);
"404
[e :U 242 ]
[e ( _Turn90 (1 -> -> 0 `i `uc ]
[; ;main.c: 405: break;
"405
[e $U 239  ]
[; ;main.c: 406: case 2: Turn90(1);
"406
[e :U 243 ]
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 407: _delay((unsigned long)((5)*(20000000/4000.0)));
"407
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 408: Turn90(1);
"408
[e ( _Turn90 (1 -> -> 1 `i `uc ]
[; ;main.c: 409: break;
"409
[e $U 239  ]
"410
}
[; ;main.c: 410: }
[e $U 239  ]
"401
[e :U 240 ]
[e [\ _orientation , $ -> -> 1 `i `uc 241
 , $ -> -> 3 `i `uc 242
 , $ -> -> 2 `i `uc 243
 239 ]
"410
[e :U 239 ]
[; ;main.c: 411: Drive1m();
"411
[e ( _Drive1m ..  ]
"412
}
[e :U 238 ]
"415
[e :U 237 ]
[e :U 230 ]
[e :U 223 ]
[; ;main.c: 412: }
[; ;main.c: 415: if (IR_Wall == 1){
[e $ ! == -> _IR_Wall `i -> 1 `i 244  ]
{
[; ;main.c: 416: n = 20;
"416
[e = _n -> -> 20 `i `uc ]
"417
}
[e :U 244 ]
"418
}
"356
[e ++ _n -> -> 1 `i `uc ]
[e :U 216 ]
[e $ <= -> _n `i -> _pathCountShortest `i 213  ]
[e :U 214 ]
"418
}
[; ;main.c: 417: }
[; ;main.c: 418: }
[; ;main.c: 419: }
"419
[e :UE 212 ]
}
"421
[v _re_route `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 421: void re_route(void){
[e :U _re_route ]
[f ]
[; ;main.c: 422: switch(orientation){
"422
[e $U 247  ]
{
[; ;main.c: 423: case 0: (mazeGridDefault[y][x]) = ((mazeGridDefault[y][x]) + 4);
"423
[e :U 248 ]
[e = *U + &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux * -> _x `ux -> -> # *U &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux * -> _x `ux -> -> # *U &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux `ui `ux `i -> 4 `i `uc ]
[; ;main.c: 424: break;
"424
[e $U 246  ]
[; ;main.c: 425: case 1: (mazeGridDefault[y][x]) = ((mazeGridDefault[y][x]) + 2);
"425
[e :U 249 ]
[e = *U + &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux * -> _x `ux -> -> # *U &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux * -> _x `ux -> -> # *U &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux `ui `ux `i -> 2 `i `uc ]
[; ;main.c: 426: break;
"426
[e $U 246  ]
[; ;main.c: 427: case 2: (mazeGridDefault[y][x]) = ((mazeGridDefault[y][x]) + 1);
"427
[e :U 250 ]
[e = *U + &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux * -> _x `ux -> -> # *U &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux * -> _x `ux -> -> # *U &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux `ui `ux `i -> 1 `i `uc ]
[; ;main.c: 428: break;
"428
[e $U 246  ]
[; ;main.c: 429: case 3: (mazeGridDefault[y][x]) = ((mazeGridDefault[y][x]) + 8);
"429
[e :U 251 ]
[e = *U + &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux * -> _x `ux -> -> # *U &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux `ui `ux -> + -> *U + &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux * -> _x `ux -> -> # *U &U *U + &U _mazeGridDefault * -> _y `ux -> * -> # *U &U *U &U _mazeGridDefault `ui -> -> 5 `i `ui `ux `ui `ux `i -> 8 `i `uc ]
[; ;main.c: 430: break;
"430
[e $U 246  ]
"431
}
[; ;main.c: 431: }
[e $U 246  ]
"422
[e :U 247 ]
[e [\ _orientation , $ -> -> 0 `i `uc 248
 , $ -> -> 1 `i `uc 249
 , $ -> -> 2 `i `uc 250
 , $ -> -> 3 `i `uc 251
 246 ]
"431
[e :U 246 ]
[; ;main.c: 433: Turn90(0);
"433
[e ( _Turn90 (1 -> -> 0 `i `uc ]
[; ;main.c: 434: Turn90(0);
"434
[e ( _Turn90 (1 -> -> 0 `i `uc ]
[; ;main.c: 435: distance = 0;
"435
[e = _distance -> 0 `i ]
[; ;main.c: 436: DriveDirect(250,250);
"436
[e ( _DriveDirect (2 , -> 250 `i -> 250 `i ]
[; ;main.c: 437: while (distance < 500){
"437
[e $U 252  ]
[e :U 253 ]
{
[; ;main.c: 438: distance = distance + getSensorData(19,2);
"438
[e = _distance + _distance ( _getSensorData (2 , -> -> 19 `i `uc -> -> 2 `i `uc ]
"439
}
[e :U 252 ]
"437
[e $ < _distance -> 500 `i 253  ]
[e :U 254 ]
[; ;main.c: 439: }
[; ;main.c: 440: DriveDirect(0,0);
"440
[e ( _DriveDirect (2 , -> 0 `i -> 0 `i ]
[; ;main.c: 441: IR_Wall = 0;
"441
[e = _IR_Wall -> -> 0 `i `b ]
[; ;main.c: 443: _delay((unsigned long)((1000)*(20000000/4000.0)));
"443
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 444: PathTo(x_goto,y_goto);
"444
[e ( _PathTo (2 , _x_goto _y_goto ]
[; ;main.c: 445: TravelPath();
"445
[e ( _TravelPath ..  ]
[; ;main.c: 446: }
"446
[e :UE 245 ]
}
[v F1237 `(v ~T0 @X0 1 tf ]
"450
[v _isr `IF1237 ~T0 @X0 1 e ]
{
[; ;main.c: 450: void interrupt isr(void){
[e :U _isr ]
[f ]
[; ;main.c: 451: if(TMR0IF){
"451
[e $ ! _TMR0IF 256  ]
{
[; ;main.c: 452: TMR0IF = 0;
"452
[e = _TMR0IF -> -> 0 `i `b ]
[; ;main.c: 453: TMR0 = 100;
"453
[e = _TMR0 -> -> 100 `i `uc ]
[; ;main.c: 454: time_count++;
"454
[e ++ _time_count -> -> 1 `i `ui ]
[; ;main.c: 456: if(!RB0)
"456
[e $ ! ! _RB0 257  ]
[; ;main.c: 457: PB8Counter++;
"457
[e ++ _PB8Counter -> -> 1 `i `uc ]
[e :U 257 ]
[; ;main.c: 458: if(!RB1)
"458
[e $ ! ! _RB1 258  ]
[; ;main.c: 459: PB7Counter++;
"459
[e ++ _PB7Counter -> -> 1 `i `uc ]
[e :U 258 ]
"460
}
[e :U 256 ]
[; ;main.c: 460: }
[; ;main.c: 461: }
"461
[e :UE 255 ]
}
"463
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 463: void main(void){
[e :U _main ]
[f ]
[; ;main.c: 465: _delay((unsigned long)((5000)*(20000000/4000.0)));
"465
[e ( __delay (1 -> * -> -> 5000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 467: ser_init();
"467
[e ( _ser_init ..  ]
[; ;main.c: 468: setupSPI();
"468
[e ( _setupSPI ..  ]
[; ;main.c: 469: setupLCD();
"469
[e ( _setupLCD ..  ]
[; ;main.c: 470: setupADC();
"470
[e ( _setupADC ..  ]
[; ;main.c: 472: TRISB = 0b00000011;
"472
[e = _TRISB -> -> 3 `i `uc ]
[; ;main.c: 473: PORTB = 0b11111100;
"473
[e = _PORTB -> -> 252 `i `uc ]
"475
[v _controlByte `uc ~T0 @X0 1 a ]
[; ;main.c: 475: unsigned char controlByte = 0b00001101;
[e = _controlByte -> -> 13 `i `uc ]
[; ;main.c: 476: spi_transfer(controlByte);
"476
[e ( _spi_transfer (1 _controlByte ]
[; ;main.c: 478: _delay((unsigned long)((1000)*(20000000/4000.0)));
"478
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 479: ser_putch(128);
"479
[e ( _ser_putch (1 -> -> 128 `i `uc ]
[; ;main.c: 480: _delay((unsigned long)((1000)*(20000000/4000.0)));
"480
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 481: ser_putch(132);
"481
[e ( _ser_putch (1 -> -> 132 `i `uc ]
[; ;main.c: 482: _delay((unsigned long)((1000)*(20000000/4000.0)));
"482
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 485: x = 1;
"485
[e = _x -> -> 1 `i `uc ]
[; ;main.c: 486: y = 0;
"486
[e = _y -> -> 0 `i `uc ]
[; ;main.c: 487: orientation = 3;
"487
[e = _orientation -> -> 3 `i `uc ]
[; ;main.c: 491: ser_putch(140);
"491
[e ( _ser_putch (1 -> -> 140 `i `uc ]
[; ;main.c: 492: ser_putch(2);
"492
[e ( _ser_putch (1 -> -> 2 `i `uc ]
[; ;main.c: 493: ser_putch(10);
"493
[e ( _ser_putch (1 -> -> 10 `i `uc ]
[; ;main.c: 494: ser_putch(67);
"494
[e ( _ser_putch (1 -> -> 67 `i `uc ]
[; ;main.c: 495: ser_putch(32);
"495
[e ( _ser_putch (1 -> -> 32 `i `uc ]
[; ;main.c: 496: ser_putch(77);
"496
[e ( _ser_putch (1 -> -> 77 `i `uc ]
[; ;main.c: 497: ser_putch(16);
"497
[e ( _ser_putch (1 -> -> 16 `i `uc ]
[; ;main.c: 498: ser_putch(77);
"498
[e ( _ser_putch (1 -> -> 77 `i `uc ]
[; ;main.c: 499: ser_putch(16);
"499
[e ( _ser_putch (1 -> -> 16 `i `uc ]
[; ;main.c: 500: ser_putch(77);
"500
[e ( _ser_putch (1 -> -> 77 `i `uc ]
[; ;main.c: 501: ser_putch(16);
"501
[e ( _ser_putch (1 -> -> 16 `i `uc ]
[; ;main.c: 502: ser_putch(77);
"502
[e ( _ser_putch (1 -> -> 77 `i `uc ]
[; ;main.c: 503: ser_putch(16);
"503
[e ( _ser_putch (1 -> -> 16 `i `uc ]
[; ;main.c: 504: ser_putch(76);
"504
[e ( _ser_putch (1 -> -> 76 `i `uc ]
[; ;main.c: 505: ser_putch(16);
"505
[e ( _ser_putch (1 -> -> 16 `i `uc ]
[; ;main.c: 506: ser_putch(74);
"506
[e ( _ser_putch (1 -> -> 74 `i `uc ]
[; ;main.c: 507: ser_putch(16);
"507
[e ( _ser_putch (1 -> -> 16 `i `uc ]
[; ;main.c: 508: ser_putch(72);
"508
[e ( _ser_putch (1 -> -> 72 `i `uc ]
[; ;main.c: 509: ser_putch(32);
"509
[e ( _ser_putch (1 -> -> 32 `i `uc ]
[; ;main.c: 510: ser_putch(79);
"510
[e ( _ser_putch (1 -> -> 79 `i `uc ]
[; ;main.c: 511: ser_putch(16);
"511
[e ( _ser_putch (1 -> -> 16 `i `uc ]
[; ;main.c: 512: ser_putch(84);
"512
[e ( _ser_putch (1 -> -> 84 `i `uc ]
[; ;main.c: 513: ser_putch(48);
"513
[e ( _ser_putch (1 -> -> 48 `i `uc ]
"516
[v _first `uc ~T0 @X0 1 a ]
[; ;main.c: 516: char first = 16;
[e = _first -> -> 16 `i `uc ]
"517
[v _second `uc ~T0 @X0 1 a ]
[; ;main.c: 517: char second = 8;
[e = _second -> -> 8 `i `uc ]
"518
[v _third `uc ~T0 @X0 1 a ]
[; ;main.c: 518: char third = 12;
[e = _third -> -> 12 `i `uc ]
"519
[v _fourth `uc ~T0 @X0 1 a ]
[; ;main.c: 519: char fourth = 36;
[e = _fourth -> -> 36 `i `uc ]
"520
[v _fifth `uc ~T0 @X0 1 a ]
[; ;main.c: 520: char fifth = 32;
[e = _fifth -> -> 32 `i `uc ]
[; ;main.c: 524: ser_putch(140);
"524
[e ( _ser_putch (1 -> -> 140 `i `uc ]
[; ;main.c: 525: ser_putch(3);
"525
[e ( _ser_putch (1 -> -> 3 `i `uc ]
[; ;main.c: 526: ser_putch(16);
"526
[e ( _ser_putch (1 -> -> 16 `i `uc ]
[; ;main.c: 527: ser_putch(62);
"527
[e ( _ser_putch (1 -> -> 62 `i `uc ]
[; ;main.c: 528: ser_putch(first);
"528
[e ( _ser_putch (1 _first ]
[; ;main.c: 529: ser_putch(69);
"529
[e ( _ser_putch (1 -> -> 69 `i `uc ]
[; ;main.c: 530: ser_putch(second);
"530
[e ( _ser_putch (1 _second ]
[; ;main.c: 531: ser_putch(62);
"531
[e ( _ser_putch (1 -> -> 62 `i `uc ]
[; ;main.c: 532: ser_putch(third);
"532
[e ( _ser_putch (1 _third ]
[; ;main.c: 533: ser_putch(65);
"533
[e ( _ser_putch (1 -> -> 65 `i `uc ]
[; ;main.c: 534: ser_putch(fourth);
"534
[e ( _ser_putch (1 _fourth ]
[; ;main.c: 535: ser_putch(62);
"535
[e ( _ser_putch (1 -> -> 62 `i `uc ]
[; ;main.c: 536: ser_putch(fifth);
"536
[e ( _ser_putch (1 _fifth ]
[; ;main.c: 538: ser_putch(65);
"538
[e ( _ser_putch (1 -> -> 65 `i `uc ]
[; ;main.c: 539: ser_putch(first);
"539
[e ( _ser_putch (1 _first ]
[; ;main.c: 540: ser_putch(62);
"540
[e ( _ser_putch (1 -> -> 62 `i `uc ]
[; ;main.c: 541: ser_putch(second);
"541
[e ( _ser_putch (1 _second ]
[; ;main.c: 542: ser_putch(65);
"542
[e ( _ser_putch (1 -> -> 65 `i `uc ]
[; ;main.c: 543: ser_putch(third);
"543
[e ( _ser_putch (1 _third ]
[; ;main.c: 544: ser_putch(69);
"544
[e ( _ser_putch (1 -> -> 69 `i `uc ]
[; ;main.c: 545: ser_putch(fourth);
"545
[e ( _ser_putch (1 _fourth ]
[; ;main.c: 546: ser_putch(65);
"546
[e ( _ser_putch (1 -> -> 65 `i `uc ]
[; ;main.c: 547: ser_putch(fifth);
"547
[e ( _ser_putch (1 _fifth ]
[; ;main.c: 549: ser_putch(69);
"549
[e ( _ser_putch (1 -> -> 69 `i `uc ]
[; ;main.c: 550: ser_putch(first);
"550
[e ( _ser_putch (1 _first ]
[; ;main.c: 551: ser_putch(65);
"551
[e ( _ser_putch (1 -> -> 65 `i `uc ]
[; ;main.c: 552: ser_putch(second);
"552
[e ( _ser_putch (1 _second ]
[; ;main.c: 553: ser_putch(69);
"553
[e ( _ser_putch (1 -> -> 69 `i `uc ]
[; ;main.c: 554: ser_putch(third);
"554
[e ( _ser_putch (1 _third ]
[; ;main.c: 555: ser_putch(60);
"555
[e ( _ser_putch (1 -> -> 60 `i `uc ]
[; ;main.c: 556: ser_putch(fourth);
"556
[e ( _ser_putch (1 _fourth ]
[; ;main.c: 557: ser_putch(48);
"557
[e ( _ser_putch (1 -> -> 48 `i `uc ]
[; ;main.c: 558: ser_putch(fifth);
"558
[e ( _ser_putch (1 _fifth ]
[; ;main.c: 560: ser_putch(65);
"560
[e ( _ser_putch (1 -> -> 65 `i `uc ]
[; ;main.c: 561: ser_putch(16);
"561
[e ( _ser_putch (1 -> -> 16 `i `uc ]
[; ;main.c: 564: ser_putch(140);
"564
[e ( _ser_putch (1 -> -> 140 `i `uc ]
[; ;main.c: 565: ser_putch(4);
"565
[e ( _ser_putch (1 -> -> 4 `i `uc ]
[; ;main.c: 566: ser_putch(3);
"566
[e ( _ser_putch (1 -> -> 3 `i `uc ]
[; ;main.c: 567: ser_putch(60);
"567
[e ( _ser_putch (1 -> -> 60 `i `uc ]
[; ;main.c: 568: ser_putch(12);
"568
[e ( _ser_putch (1 -> -> 12 `i `uc ]
[; ;main.c: 569: ser_putch(65);
"569
[e ( _ser_putch (1 -> -> 65 `i `uc ]
[; ;main.c: 570: ser_putch(12);
"570
[e ( _ser_putch (1 -> -> 12 `i `uc ]
[; ;main.c: 571: ser_putch(69);
"571
[e ( _ser_putch (1 -> -> 69 `i `uc ]
[; ;main.c: 572: ser_putch(96);
"572
[e ( _ser_putch (1 -> -> 96 `i `uc ]
[; ;main.c: 576: ser_putch(140);
"576
[e ( _ser_putch (1 -> -> 140 `i `uc ]
[; ;main.c: 577: ser_putch(5);
"577
[e ( _ser_putch (1 -> -> 5 `i `uc ]
[; ;main.c: 578: ser_putch(11);
"578
[e ( _ser_putch (1 -> -> 11 `i `uc ]
[; ;main.c: 579: ser_putch(70);
"579
[e ( _ser_putch (1 -> -> 70 `i `uc ]
[; ;main.c: 580: ser_putch(12);
"580
[e ( _ser_putch (1 -> -> 12 `i `uc ]
[; ;main.c: 581: ser_putch(67);
"581
[e ( _ser_putch (1 -> -> 67 `i `uc ]
[; ;main.c: 582: ser_putch(12);
"582
[e ( _ser_putch (1 -> -> 12 `i `uc ]
[; ;main.c: 583: ser_putch(62);
"583
[e ( _ser_putch (1 -> -> 62 `i `uc ]
[; ;main.c: 584: ser_putch(96);
"584
[e ( _ser_putch (1 -> -> 96 `i `uc ]
[; ;main.c: 585: ser_putch(70);
"585
[e ( _ser_putch (1 -> -> 70 `i `uc ]
[; ;main.c: 586: ser_putch(12);
"586
[e ( _ser_putch (1 -> -> 12 `i `uc ]
[; ;main.c: 587: ser_putch(67);
"587
[e ( _ser_putch (1 -> -> 67 `i `uc ]
[; ;main.c: 588: ser_putch(12);
"588
[e ( _ser_putch (1 -> -> 12 `i `uc ]
[; ;main.c: 589: ser_putch(61);
"589
[e ( _ser_putch (1 -> -> 61 `i `uc ]
[; ;main.c: 590: ser_putch(96);
"590
[e ( _ser_putch (1 -> -> 96 `i `uc ]
[; ;main.c: 591: ser_putch(70);
"591
[e ( _ser_putch (1 -> -> 70 `i `uc ]
[; ;main.c: 592: ser_putch(12);
"592
[e ( _ser_putch (1 -> -> 12 `i `uc ]
[; ;main.c: 593: ser_putch(67);
"593
[e ( _ser_putch (1 -> -> 67 `i `uc ]
[; ;main.c: 594: ser_putch(12);
"594
[e ( _ser_putch (1 -> -> 12 `i `uc ]
[; ;main.c: 595: ser_putch(60);
"595
[e ( _ser_putch (1 -> -> 60 `i `uc ]
[; ;main.c: 596: ser_putch(96);
"596
[e ( _ser_putch (1 -> -> 96 `i `uc ]
[; ;main.c: 597: ser_putch(70);
"597
[e ( _ser_putch (1 -> -> 70 `i `uc ]
[; ;main.c: 598: ser_putch(12);
"598
[e ( _ser_putch (1 -> -> 12 `i `uc ]
[; ;main.c: 599: ser_putch(60);
"599
[e ( _ser_putch (1 -> -> 60 `i `uc ]
[; ;main.c: 600: ser_putch(20);
"600
[e ( _ser_putch (1 -> -> 20 `i `uc ]
[; ;main.c: 603: ser_putch(140);
"603
[e ( _ser_putch (1 -> -> 140 `i `uc ]
[; ;main.c: 604: ser_putch(6);
"604
[e ( _ser_putch (1 -> -> 6 `i `uc ]
[; ;main.c: 605: ser_putch(11);
"605
[e ( _ser_putch (1 -> -> 11 `i `uc ]
[; ;main.c: 606: ser_putch(55);
"606
[e ( _ser_putch (1 -> -> 55 `i `uc ]
[; ;main.c: 607: ser_putch(22);
"607
[e ( _ser_putch (1 -> -> 22 `i `uc ]
[; ;main.c: 608: ser_putch(55);
"608
[e ( _ser_putch (1 -> -> 55 `i `uc ]
[; ;main.c: 609: ser_putch(22);
"609
[e ( _ser_putch (1 -> -> 22 `i `uc ]
[; ;main.c: 610: ser_putch(0);
"610
[e ( _ser_putch (1 -> -> 0 `i `uc ]
[; ;main.c: 611: ser_putch(2);
"611
[e ( _ser_putch (1 -> -> 2 `i `uc ]
[; ;main.c: 612: ser_putch(58);
"612
[e ( _ser_putch (1 -> -> 58 `i `uc ]
[; ;main.c: 613: ser_putch(18);
"613
[e ( _ser_putch (1 -> -> 18 `i `uc ]
[; ;main.c: 614: ser_putch(48);
"614
[e ( _ser_putch (1 -> -> 48 `i `uc ]
[; ;main.c: 615: ser_putch(24);
"615
[e ( _ser_putch (1 -> -> 24 `i `uc ]
[; ;main.c: 616: ser_putch(0);
"616
[e ( _ser_putch (1 -> -> 0 `i `uc ]
[; ;main.c: 617: ser_putch(10);
"617
[e ( _ser_putch (1 -> -> 10 `i `uc ]
[; ;main.c: 618: ser_putch(55);
"618
[e ( _ser_putch (1 -> -> 55 `i `uc ]
[; ;main.c: 619: ser_putch(22);
"619
[e ( _ser_putch (1 -> -> 22 `i `uc ]
[; ;main.c: 620: ser_putch(55);
"620
[e ( _ser_putch (1 -> -> 55 `i `uc ]
[; ;main.c: 621: ser_putch(22);
"621
[e ( _ser_putch (1 -> -> 22 `i `uc ]
[; ;main.c: 622: ser_putch(0);
"622
[e ( _ser_putch (1 -> -> 0 `i `uc ]
[; ;main.c: 623: ser_putch(2);
"623
[e ( _ser_putch (1 -> -> 2 `i `uc ]
[; ;main.c: 624: ser_putch(53);
"624
[e ( _ser_putch (1 -> -> 53 `i `uc ]
[; ;main.c: 625: ser_putch(18);
"625
[e ( _ser_putch (1 -> -> 18 `i `uc ]
[; ;main.c: 626: ser_putch(54);
"626
[e ( _ser_putch (1 -> -> 54 `i `uc ]
[; ;main.c: 627: ser_putch(24);
"627
[e ( _ser_putch (1 -> -> 24 `i `uc ]
[; ;main.c: 635: while(1){
"635
[e :U 261 ]
{
[; ;main.c: 637: if(PB7Counter >= 10 && !RB1== 0){
"637
[e $ ! && >= -> _PB7Counter `i -> 10 `i == -> ! _RB1 `i -> 0 `i 263  ]
{
[; ;main.c: 640: ser_putch(141);
"640
[e ( _ser_putch (1 -> -> 141 `i `uc ]
[; ;main.c: 641: ser_putch(6);
"641
[e ( _ser_putch (1 -> -> 6 `i `uc ]
[; ;main.c: 642: _delay((unsigned long)((3000)*(20000000/4000.0)));
"642
[e ( __delay (1 -> * -> -> 3000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 643: ser_putch(141);
"643
[e ( _ser_putch (1 -> -> 141 `i `uc ]
[; ;main.c: 644: ser_putch(6);
"644
[e ( _ser_putch (1 -> -> 6 `i `uc ]
[; ;main.c: 645: _delay((unsigned long)((3000)*(20000000/4000.0)));
"645
[e ( __delay (1 -> * -> -> 3000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;main.c: 646: ser_putch(141);
"646
[e ( _ser_putch (1 -> -> 141 `i `uc ]
[; ;main.c: 647: ser_putch(5);
"647
[e ( _ser_putch (1 -> -> 5 `i `uc ]
[; ;main.c: 652: PB7Counter=0;
"652
[e = _PB7Counter -> -> 0 `i `uc ]
"656
}
[e :U 263 ]
[; ;main.c: 656: }
[; ;main.c: 661: if(PB8Counter >= 10 && !RB0 == 0){
"661
[e $ ! && >= -> _PB8Counter `i -> 10 `i == -> ! _RB0 `i -> 0 `i 264  ]
{
[; ;main.c: 664: PathTo(2,0);
"664
[e ( _PathTo (2 , -> -> 2 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 666: TravelPath();
"666
[e ( _TravelPath ..  ]
[; ;main.c: 667: if (IR_Wall == 1)
"667
[e $ ! == -> _IR_Wall `i -> 1 `i 265  ]
[; ;main.c: 668: re_route();
"668
[e ( _re_route ..  ]
[e :U 265 ]
[; ;main.c: 669: if (targets_found == 1){
"669
[e $ ! == -> _targets_found `i -> 1 `i 266  ]
{
[; ;main.c: 670: PathTo(1,0);
"670
[e ( _PathTo (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 671: TravelPath();
"671
[e ( _TravelPath ..  ]
"672
}
[e :U 266 ]
[; ;main.c: 672: }
[; ;main.c: 677: PathTo(3,0);
"677
[e ( _PathTo (2 , -> -> 3 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 679: TravelPath();
"679
[e ( _TravelPath ..  ]
[; ;main.c: 680: if (IR_Wall == 1)
"680
[e $ ! == -> _IR_Wall `i -> 1 `i 267  ]
[; ;main.c: 681: re_route();
"681
[e ( _re_route ..  ]
[e :U 267 ]
[; ;main.c: 682: if (targets_found == 1){
"682
[e $ ! == -> _targets_found `i -> 1 `i 268  ]
{
[; ;main.c: 683: PathTo(1,0);
"683
[e ( _PathTo (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 684: TravelPath();
"684
[e ( _TravelPath ..  ]
"685
}
[e :U 268 ]
[; ;main.c: 685: }
[; ;main.c: 687: PathTo(4,3);
"687
[e ( _PathTo (2 , -> -> 4 `i `uc -> -> 3 `i `uc ]
[; ;main.c: 688: TravelPath();
"688
[e ( _TravelPath ..  ]
[; ;main.c: 689: if (IR_Wall == 1)
"689
[e $ ! == -> _IR_Wall `i -> 1 `i 269  ]
[; ;main.c: 690: re_route();
"690
[e ( _re_route ..  ]
[e :U 269 ]
[; ;main.c: 691: if (targets_found == 1){
"691
[e $ ! == -> _targets_found `i -> 1 `i 270  ]
{
[; ;main.c: 692: PathTo(1,0);
"692
[e ( _PathTo (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 693: TravelPath();
"693
[e ( _TravelPath ..  ]
"694
}
[e :U 270 ]
[; ;main.c: 694: }
[; ;main.c: 696: PathTo(3,2);
"696
[e ( _PathTo (2 , -> -> 3 `i `uc -> -> 2 `i `uc ]
[; ;main.c: 697: TravelPath();
"697
[e ( _TravelPath ..  ]
[; ;main.c: 698: if (IR_Wall == 1)
"698
[e $ ! == -> _IR_Wall `i -> 1 `i 271  ]
[; ;main.c: 699: re_route();
"699
[e ( _re_route ..  ]
[e :U 271 ]
[; ;main.c: 700: if (targets_found == 1){
"700
[e $ ! == -> _targets_found `i -> 1 `i 272  ]
{
[; ;main.c: 701: PathTo(1,0);
"701
[e ( _PathTo (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 702: TravelPath();
"702
[e ( _TravelPath ..  ]
"703
}
[e :U 272 ]
[; ;main.c: 703: }
[; ;main.c: 705: PathTo(0,3);
"705
[e ( _PathTo (2 , -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;main.c: 707: TravelPath();
"707
[e ( _TravelPath ..  ]
[; ;main.c: 708: if (IR_Wall == 1)
"708
[e $ ! == -> _IR_Wall `i -> 1 `i 273  ]
[; ;main.c: 709: re_route();
"709
[e ( _re_route ..  ]
[e :U 273 ]
[; ;main.c: 710: if (targets_found == 1){
"710
[e $ ! == -> _targets_found `i -> 1 `i 274  ]
{
[; ;main.c: 711: PathTo(1,0);
"711
[e ( _PathTo (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 712: TravelPath();
"712
[e ( _TravelPath ..  ]
"713
}
[e :U 274 ]
[; ;main.c: 713: }
[; ;main.c: 721: PB8Counter = 0;
"721
[e = _PB8Counter -> -> 0 `i `uc ]
"722
}
[e :U 264 ]
"728
}
[e :U 260 ]
"635
[e $U 261  ]
[e :U 262 ]
[; ;main.c: 722: }
[; ;main.c: 728: }
[; ;main.c: 729: }
"729
[e :UE 259 ]
}
[a 1C 87 111 114 107 105 110 103 46 46 46 0 ]

