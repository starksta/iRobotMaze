Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\iRobot_Maze.X.production.sym \
  --cmf=dist/default/production\iRobot_Maze.X.production.cmf -z -Q16F877A \
  -oC:\Users\Brendan\AppData\Local\Temp\s172s.2 \
  -Mdist/default/production/iRobot_Maze.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Brendan\AppData\Local\Temp\s172s.obj \
  dist/default/production\iRobot_Maze.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Brendan\AppData\Local\Temp\s172s.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\iRobot_Maze.X.production.obj
                cinit                                15       15       4F        8       0
                intentry                              4        4        E        8       0
                text20                              FDE      FDE       22     1FBC       0
                text19                              F2B      F2B       13     1E56       0
                text18                              F51      F51       14     1EA2       0
                text17                              EDD      EDD        9     1DBA       0
                text16                              F3E      F3E       13     1E7C       0
                text15                              FBE      FBE       20     1F7C       0
                text14                               64       64      38B        8       0
                text13                              EF0      EF0        C     1DE0       0
                text12                              636      636       8D        8       0
                text11                              EE6      EE6        A     1DCC       0
                text10                              76B      76B       3E        8       0
                text9                               6C3      6C3       68        8       0
                text8                               7D2      7D2       28        8       0
                text7                               4F9      4F9       A1        8       0
                text6                               3EF      3EF      10A        8       0
                text5                               EFC      EFC        F     1DF8       0
                text4                               F79      F79       16     1EF2       0
                text3                               7A9      7A9       29        8       0
                text2                               FA5      FA5       19     1F4A       0
                text1                               F0B      F0B        F     1E16       0
                maintext                            59A      59A       9C        8       0
                cstackBANK0                          57       57       15       20       1
                cstackCOMMON                         71       71        5       70       1
                clrtext                             ED5      ED5        8     1DAA       0
                inittext                            F1A      F1A       11     1E34       0
                dataBANK3                           190      190       40      190       1
                bssBANK3                            1D0      1D0       20      190       1
                dataBANK1                            C0       C0       14       A0       1
                bssBANK1                             A0       A0       20       A0       1
                dataBANK0                            41       41       16       20       1
                bssBANK0                             20       20       21       20       1
                dataCOMMON                           79       79        1       70       1
                bssCOMMON                            76       76        3       70       1
                bitbssCOMMON                        380       70        6       70       1     8
                strings                             800      800       11     1000       0
                idataBANK3                          72B      72B       40        8       0
                idataBANK1                          F65      F65       14     1ECA       0
                idataBANK0                          F8F      F8F       16     1F1E       0
                idataCOMMON                         7FA      7FA        1        8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       4F         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text20                              FDE      FDE       22         0
                text19                              F2B      F2B       13         0
                text18                              F51      F51       14         0
                text17                              EDD      EDD        9         0
                text16                              F3E      F3E       13         0
                text15                              FBE      FBE       20         0
                text14                               64       64      38B         0
                text13                              EF0      EF0        C         0
                text12                              636      636       8D         0
                text11                              EE6      EE6        A         0
                text10                              76B      76B       3E         0
                text9                               6C3      6C3       68         0
                text8                               7D2      7D2       28         0
                text7                               4F9      4F9       A1         0
                text6                               3EF      3EF      10A         0
                text5                               EFC      EFC        F         0
                text4                               F79      F79       16         0
                text3                               7A9      7A9       29         0
                text2                               FA5      FA5       19         0
                text1                               F0B      F0B        F         0
                maintext                            59A      59A       9C         0
                clrtext                             ED5      ED5        8         0
                inittext                            F1A      F1A       11         0
                idataBANK3                          72B      72B       40         0
                idataBANK1                          F65      F65       14         0
                idataBANK0                          F8F      F8F       16         0
                idataCOMMON                         7FA      7FA        1         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             800      800       11         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         71       71        5         1
                dataCOMMON                           79       79        1         1
                bssCOMMON                            76       76        3         1
                bitbssCOMMON                        380       70        6         1

        CLASS   BANK0          
                cstackBANK0                          57       57       15         1
                dataBANK0                            41       41       16         1
                bssBANK0                             20       20       21         1

        CLASS   BANK1          
                dataBANK1                            C0       C0       14         1
                bssBANK1                             A0       A0       20         1

        CLASS   BANK2          

        CLASS   BANK3          
                dataBANK3                           190      190       40         1
                bssBANK3                            1D0      1D0       20         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007F7  0007FB         8       0  CODE        2
                bssBANK0                       000020  00004C  00006C        20       1  BANK0       1
                bitbssCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                bssBANK1                       0000A0  000034  0000D4        A0       1  BANK1       1
                dataBANK3                      000190  000060  0001F0       190       1  BANK3       1
                strings                        000800  000011  000811      1000       0  STRING      2
                clrtext                        000ED5  000008  000EDD      1DAA       0  CODE        2
                text17                         000EDD  000009  000EE6      1DBA       0  CODE        2
                text11                         000EE6  00000A  000EF0      1DCC       0  CODE        2
                text13                         000EF0  00000C  000EFC      1DE0       0  CODE        2
                text5                          000EFC  00000F  000F0B      1DF8       0  CODE        2
                text1                          000F0B  00000F  000F1A      1E16       0  CODE        2
                inittext                       000F1A  000011  000F2B      1E34       0  CODE        2
                text19                         000F2B  000013  000F3E      1E56       0  CODE        2
                text16                         000F3E  000013  000F51      1E7C       0  CODE        2
                text18                         000F51  000014  000F65      1EA2       0  CODE        2
                idataBANK1                     000F65  000014  000F79      1ECA       0  CODE        2
                text4                          000F79  000016  000F8F      1EF2       0  CODE        2
                idataBANK0                     000F8F  000016  000FA5      1F1E       0  CODE        2
                text2                          000FA5  000019  000FBE      1F4A       0  CODE        2
                text15                         000FBE  000020  000FDE      1F7C       0  CODE        2
                text20                         000FDE  000022  001000      1FBC       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006C-006F              4           1
        BANK1            00D4-00EF             1C           1
        BANK2            0110-016F             60           1
        CODE             0003-0003              1           2
                         07FB-07FF              5
                         0811-0ED4            6C4
                         1000-1FFF            800
        COMMON           007A-007D              4           1
        CONST            0003-0003              1           2
                         07FB-07FF              5
                         0811-0ED4            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         07FB-07FF              5
                         0811-0ED4            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006C-006F              4           1
                         00D4-00EF             1C
                         0110-016F             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         07FB-07FF              5
                         0811-0ED4            6C4
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         07FB-07FF              5
                         0811-0ED4            100
                         1000-1FFF            100

                                  Symbol Table

?_getSensorData           cstackBANK0  0059
Drive@radH                cstackBANK0  0059
Drive@radL                cstackBANK0  005A
Drive@speedH              cstackBANK0  005B
Drive@speedL              cstackBANK0  0058
DriveDirect@VelocityLeft  cstackBANK0  005A
DriveDirect@VelocityRight cstackBANK0  0058
DriveDirect@data          cstackBANK0  005D
DriveDirect@data_388      cstackBANK0  005F
PathTo@loop               cstackBANK0  0066
PathTo@sum                cstackBANK0  0065
PathTo@x_target           cstackBANK0  0064
PathTo@y_target           cstackBANK0  005C
TravelPath@n              cstackBANK0  0067
Turn90@direction          cstackBANK0  0064
_ADCON0                   (abs)        001F
_ADCON1                   (abs)        009F
_ADRESH                   (abs)        001E
_ADRESL                   (abs)        009E
_Drive                    text8        07D2
_Drive1m                  text9        06C3
_DriveDirect              text12       0636
_GIE                      (abs)        005F
_GO                       (abs)        00FA
_IR_Wall                  bitbssCOMMON 0380
_LeftSpeedH               bssBANK0     002A
_LeftSpeedL               bssBANK0     002B
_OPTION_REG               (abs)        0081
_PB7Counter               bssBANK0     002C
_PB8Counter               bssBANK0     002D
_PEIE                     (abs)        005E
_PORTA                    (abs)        0005
_PORTB                    (abs)        0006
_PORTC                    (abs)        0007
_PORTD                    (abs)        0008
_PORTE                    (abs)        0009
_PathTo                   text14       0064
_RB0                      (abs)        0030
_RB1                      (abs)        0031
_RB4                      (abs)        0034
_RCIF                     (abs)        0065
_RCREG                    (abs)        001A
_RCSTA                    (abs)        0018
_RE0                      (abs)        0048
_RE1                      (abs)        0049
_RE2                      (abs)        004A
_RightSpeedH              bssBANK0     002E
_RightSpeedL              bssBANK0     002F
_SPBRG                    (abs)        0099
_SSPBUF                   (abs)        0013
_SSPCON                   (abs)        0014
_SSPIF                    (abs)        0063
_SSPSTAT                  (abs)        0094
_TMR0                     (abs)        0001
_TMR0IE                   (abs)        005D
_TMR0IF                   (abs)        005A
_TRISA                    (abs)        0085
_TRISB                    (abs)        0086
_TRISC                    (abs)        0087
_TRISD                    (abs)        0088
_TRISE                    (abs)        0089
_TRMT                     (abs)        04C1
_TXREG                    (abs)        0019
_TXSTA                    (abs)        0098
_TravelPath               text6        03EF
_Turn90                   text7        04F9
__CFG_BOREN$OFF           (abs)        0000
__CFG_CP$OFF              (abs)        0000
__CFG_CPD$OFF             (abs)        0000
__CFG_FOSC$HS             (abs)        0000
__CFG_LVP$OFF             (abs)        0000
__CFG_PWRTE$OFF           (abs)        0000
__CFG_WDTE$OFF            (abs)        0000
__CFG_WRT$OFF             (abs)        0000
__Habs1                   abs1         0000
__Hbank0                  bank0        0000
__Hbank1                  bank1        0000
__Hbank2                  bank2        0000
__Hbank3                  bank3        0000
__HbitbssCOMMON           bitbssCOMMON 0000
__HbssBANK0               bssBANK0     0000
__HbssBANK1               bssBANK1     0000
__HbssBANK3               bssBANK3     0000
__HbssCOMMON              bssCOMMON    0000
__Hcinit                  cinit        0064
__Hclrtext                clrtext      0000
__Hcode                   code         0000
__Hcommon                 common       0000
__Hconfig                 config       2008
__HcstackBANK0            cstackBANK0  0000
__HcstackCOMMON           cstackCOMMON 0000
__HdataBANK0              dataBANK0    0000
__HdataBANK1              dataBANK1    0000
__HdataBANK3              dataBANK3    0000
__HdataCOMMON             dataCOMMON   0000
__Heeprom_data            eeprom_data  0000
__Hend_init               end_init     0015
__Hfunctab                functab      0000
__HidataBANK0             idataBANK0   0000
__HidataBANK1             idataBANK1   0000
__HidataBANK3             idataBANK3   0000
__HidataCOMMON            idataCOMMON  0000
__Hidloc                  idloc        0000
__Hinit                   init         0012
__Hinittext               inittext     0000
__Hintentry               intentry     0012
__Hmaintext               maintext     0000
__Hpowerup                powerup      0000
__Hram                    ram          0000
__Hreset_vec              reset_vec    0003
__Hsfr0                   sfr0         0000
__Hsfr1                   sfr1         0000
__Hsfr2                   sfr2         0000
__Hsfr3                   sfr3         0000
__Hspace_0                (abs)        2008
__Hspace_1                (abs)        0386
__Hspace_2                (abs)        0000
__Hspace_3                (abs)        0000
__Hstack                  stack        0000
__Hstrings                strings      0000
__Htext                   text         0000
__Labs1                   abs1         0000
__Lbank0                  bank0        0000
__Lbank1                  bank1        0000
__Lbank2                  bank2        0000
__Lbank3                  bank3        0000
__LbitbssCOMMON           bitbssCOMMON 0000
__LbssBANK0               bssBANK0     0000
__LbssBANK1               bssBANK1     0000
__LbssBANK3               bssBANK3     0000
__LbssCOMMON              bssCOMMON    0000
__Lcinit                  cinit        0015
__Lclrtext                clrtext      0000
__Lcode                   code         0000
__Lcommon                 common       0000
__Lconfig                 config       2007
__LcstackBANK0            cstackBANK0  0000
__LcstackCOMMON           cstackCOMMON 0000
__LdataBANK0              dataBANK0    0000
__LdataBANK1              dataBANK1    0000
__LdataBANK3              dataBANK3    0000
__LdataCOMMON             dataCOMMON   0000
__Leeprom_data            eeprom_data  0000
__Lend_init               end_init     0012
__Lfunctab                functab      0000
__LidataBANK0             idataBANK0   0000
__LidataBANK1             idataBANK1   0000
__LidataBANK3             idataBANK3   0000
__LidataCOMMON            idataCOMMON  0000
__Lidloc                  idloc        0000
__Linit                   init         0012
__Linittext               inittext     0000
__Lintentry               intentry     0004
__Lmaintext               maintext     0000
__Lpowerup                powerup      0000
__Lram                    ram          0000
__Lreset_vec              reset_vec    0000
__Lsfr0                   sfr0         0000
__Lsfr1                   sfr1         0000
__Lsfr2                   sfr2         0000
__Lsfr3                   sfr3         0000
__Lspace_0                (abs)        0000
__Lspace_1                (abs)        0000
__Lspace_2                (abs)        0000
__Lspace_3                (abs)        0000
__Lstack                  stack        0000
__Lstrings                strings      0000
__Ltext                   text         0000
__S0                      (abs)        2008
__S1                      (abs)        01F0
__S2                      (abs)        0000
__S3                      (abs)        0000
___bmul                   text19       0F2B
___bmul@multiplicand      cstackBANK0  0057
___bmul@multiplier        cstackBANK0  005A
___bmul@product           cstackBANK0  0059
___int_sp                 stack        0000
___latbits                (abs)        0002
___sp                     stack        0000
__end_of_Drive            text8        07FA
__end_of_Drive1m          text9        072B
__end_of_DriveDirect      text12       06C3
__end_of_PathTo           text14       03EF
__end_of_TravelPath       text6        04F9
__end_of_Turn90           text7        059A
__end_of___bmul           text19       0F3E
__end_of__initialization  cinit        0060
__end_of__stringtab       strings      0806
__end_of_getSensorData    text10       07A9
__end_of_isr              text20       1000
__end_of_lcdSetCursor     text17       0EE6
__end_of_lcdWriteControl  text18       0F65
__end_of_lcdWriteData     text16       0F51
__end_of_lcdWriteString   text15       0FDE
__end_of_main             maintext     0636
__end_of_ser_getch        text11       0EF0
__end_of_ser_init         text5        0F0B
__end_of_ser_putch        text13       0EFC
__end_of_setupADC         text4        0F8F
__end_of_setupLCD         text3        07D2
__end_of_setupSPI         text2        0FBE
__end_of_spi_transfer     text1        0F1A
__initialization          cinit        0015
__pbitbssCOMMON           bitbssCOMMON 0380
__pbssBANK0               bssBANK0     0020
__pbssBANK1               bssBANK1     00A0
__pbssBANK3               bssBANK3     01D0
__pbssCOMMON              bssCOMMON    0076
__pcstackBANK0            cstackBANK0  0057
__pcstackCOMMON           cstackCOMMON 0071
__pdataBANK0              dataBANK0    0041
__pdataBANK1              dataBANK1    00C0
__pdataBANK3              dataBANK3    0190
__pdataCOMMON             dataCOMMON   0079
__pidataBANK0             idataBANK0   0F8F
__pidataBANK1             idataBANK1   0F65
__pidataBANK3             idataBANK3   072B
__pidataCOMMON            idataCOMMON  07FA
__pintentry               intentry     0004
__pmaintext               maintext     059A
__pstrings                strings      0800
__ptext1                  text1        0F0B
__ptext10                 text10       076B
__ptext11                 text11       0EE6
__ptext12                 text12       0636
__ptext13                 text13       0EF0
__ptext14                 text14       0064
__ptext15                 text15       0FBE
__ptext16                 text16       0F3E
__ptext17                 text17       0EDD
__ptext18                 text18       0F51
__ptext19                 text19       0F2B
__ptext2                  text2        0FA5
__ptext20                 text20       0FDE
__ptext3                  text3        07A9
__ptext4                  text4        0F79
__ptext5                  text5        0EFC
__ptext6                  text6        03EF
__ptext7                  text7        04F9
__ptext8                  text8        07D2
__ptext9                  text9        06C3
__size_of_Drive           (abs)        0000
__size_of_Drive1m         (abs)        0000
__size_of_DriveDirect     (abs)        0000
__size_of_PathTo          (abs)        0000
__size_of_TravelPath      (abs)        0000
__size_of_Turn90          (abs)        0000
__size_of___bmul          (abs)        0000
__size_of_getSensorData   (abs)        0000
__size_of_isr             (abs)        0000
__size_of_lcdSetCursor    (abs)        0000
__size_of_lcdWriteControl (abs)        0000
__size_of_lcdWriteData    (abs)        0000
__size_of_lcdWriteString  (abs)        0000
__size_of_main            (abs)        0000
__size_of_ser_getch       (abs)        0000
__size_of_ser_init        (abs)        0000
__size_of_ser_putch       (abs)        0000
__size_of_setupADC        (abs)        0000
__size_of_setupLCD        (abs)        0000
__size_of_setupSPI        (abs)        0000
__size_of_spi_transfer    (abs)        0000
__stringbase              strings      0805
__stringtab               strings      0800
_adcRAW                   bssCOMMON    0076
_angle                    bssBANK0     0024
_c                        bssBANK0     0030
_distance                 bssBANK0     0026
_down                     bitbssCOMMON 0381
_getSensorData            text10       076B
_gridWalls                dataBANK3    0190
_highByte                 bssCOMMON    0078
_intersection_orientation bssBANK0     0031
_isr                      text20       0FDE
_lcdSetCursor             text17       0EDD
_lcdWriteControl          text18       0F51
_lcdWriteData             text16       0F3E
_lcdWriteString           text15       0FBE
_left                     bitbssCOMMON 0382
_lowByte                  bssBANK0     0032
_main                     maintext     059A
_mazeGrid                 dataBANK0    0041
_mazeGridDefault          dataBANK1    00C0
_orientation              dataCOMMON   0079
_orientation_path         bssBANK0     0033
_path                     bssBANK1     00A0
_pathCount                bssBANK0     0034
_pathCountShortest        dataBANK0    0055
_pathShortest             bssBANK3     01D0
_r                        bssBANK0     0035
_reset_flag               bitbssCOMMON 0383
_right                    bitbssCOMMON 0384
_ser_getch                text11       0EE6
_ser_init                 text5        0EFC
_ser_putch                text13       0EF0
_setupADC                 text4        0F79
_setupLCD                 text3        07A9
_setupSPI                 text2        0FA5
_spi_transfer             text1        0F0B
_time_count               bssBANK0     0028
_up                       bitbssCOMMON 0385
_x                        dataBANK0    0056
_x_int                    bssBANK0     003A
_x_path                   bssBANK0     003B
_y                        bssBANK0     003D
_y_int                    bssBANK0     003E
_y_path                   bssBANK0     003F
btemp                     (abs)        007E
clear_ram0                clrtext      0ED5
end_of_initialization     cinit        0060
getSensorData@bytes       cstackBANK0  0059
getSensorData@packetID    cstackBANK0  005D
getSensorData@sensor      cstackBANK0  005E
init_fetch0               inittext     0F1A
init_ram0                 inittext     0F1E
interrupt_function        intentry     0004
intlevel0                 functab      0000
intlevel1                 functab      0000
intlevel2                 functab      0000
intlevel3                 functab      0000
intlevel4                 functab      0000
intlevel5                 functab      0000
lcdSetCursor@address      cstackBANK0  005A
lcdWriteControl@databyte  cstackBANK0  0059
lcdWriteData@databyte     cstackBANK0  0059
lcdWriteString@s          cstackBANK0  005B
ltemp                     (abs)        007E
ltemp0                    (abs)        007E
ltemp1                    (abs)        0082
ltemp2                    (abs)        0086
ltemp3                    (abs)        0080
main@controlByte          cstackBANK0  006B
reset_vec                 reset_vec    0000
saved_w                   (abs)        007E
ser_getch@rxbyte          cstackBANK0  0058
ser_putch@c               cstackBANK0  0057
spi_transfer@data         cstackBANK0  0059
spi_transfer@temp         cstackBANK0  0058
stackhi                   (abs)        0000
stacklo                   (abs)        0000
start                     init         0012
start_initialization      cinit        0015
ttemp                     (abs)        007E
ttemp0                    (abs)        007E
ttemp1                    (abs)        0081
ttemp2                    (abs)        0084
ttemp3                    (abs)        0087
ttemp4                    (abs)        007F
wtemp                     (abs)        007E
wtemp0                    (abs)        007E
wtemp1                    (abs)        0080
wtemp2                    (abs)        0082
wtemp3                    (abs)        0084
wtemp4                    (abs)        0086
wtemp5                    (abs)        0088
wtemp6                    (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 363 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  controlByte     1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_PathTo
		_TravelPath
		_ser_init
		_ser_putch
		_setupADC
		_setupLCD
		_setupSPI
		_spi_transfer
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _spi_transfer *****************
 Defined at:
		line 22 in file "SPI.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[BANK0 ] unsigned char 
  temp            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupSPI *****************
 Defined at:
		line 4 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupLCD *****************
 Defined at:
		line 86 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcdWriteControl
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupADC *****************
 Defined at:
		line 5 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ser_init *****************
 Defined at:
		line 5 in file "ser.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TravelPath *****************
 Defined at:
		line 265 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  n               1   16[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Drive1m
		_Turn90
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Turn90 *****************
 Defined at:
		line 39 in file "main.c"
 Parameters:    Size  Location     Type
  direction       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  direction       1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Drive
		_DriveDirect
		_getSensorData
 This function is called by:
		_TravelPath
 This function uses a non-reentrant model


 *************** function _Drive *****************
 Defined at:
		line 45 in file "ser.c"
 Parameters:    Size  Location     Type
  speedH          1    wreg     unsigned char 
  speedL          1    1[BANK0 ] unsigned char 
  radH            1    2[BANK0 ] unsigned char 
  radL            1    3[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  speedH          1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ser_putch
 This function is called by:
		_Turn90
 This function uses a non-reentrant model


 *************** function _Drive1m *****************
 Defined at:
		line 15 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_DriveDirect
		_getSensorData
 This function is called by:
		_TravelPath
 This function uses a non-reentrant model


 *************** function _getSensorData *****************
 Defined at:
		line 85 in file "ser.c"
 Parameters:    Size  Location     Type
  packetID        1    wreg     unsigned char 
  bytes           1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  packetID        1    6[BANK0 ] unsigned char 
  sensor          2    7[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    2[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ser_getch
		_ser_putch
 This function is called by:
		_Drive1m
		_Turn90
 This function uses a non-reentrant model


 *************** function _ser_getch *****************
 Defined at:
		line 35 in file "ser.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  rxbyte          1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_getSensorData
 This function uses a non-reentrant model


 *************** function _DriveDirect *****************
 Defined at:
		line 54 in file "ser.c"
 Parameters:    Size  Location     Type
  VelocityRigh    2    1[BANK0 ] int 
  VelocityLeft    2    3[BANK0 ] int 
 Auto vars:     Size  Location     Type
  data            2    8[BANK0 ] unsigned int 
  data            2    6[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ser_putch
 This function is called by:
		_Drive1m
		_Turn90
 This function uses a non-reentrant model


 *************** function _ser_putch *****************
 Defined at:
		line 30 in file "ser.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_Drive
		_DriveDirect
		_getSensorData
 This function uses a non-reentrant model


 *************** function _PathTo *****************
 Defined at:
		line 68 in file "main.c"
 Parameters:    Size  Location     Type
  x_target        1    wreg     unsigned char 
  y_target        1    5[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  x_target        1   13[BANK0 ] unsigned char 
  sum             1   14[BANK0 ] unsigned char 
  loop            2   15[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       7       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___bmul
		_lcdSetCursor
		_lcdWriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcdWriteString *****************
 Defined at:
		line 32 in file "LCD.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR unsigned char 
		 -> STR_1(11), 
 Auto vars:     Size  Location     Type
  s               1    4[BANK0 ] PTR unsigned char 
		 -> STR_1(11), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcdWriteData
 This function is called by:
		_PathTo
 This function uses a non-reentrant model


 *************** function _lcdWriteData *****************
 Defined at:
		line 16 in file "LCD.c"
 Parameters:    Size  Location     Type
  databyte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  databyte        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_lcdWriteString
		_lcdWriteToDigitBCD
 This function uses a non-reentrant model


 *************** function _lcdSetCursor *****************
 Defined at:
		line 27 in file "LCD.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  address         1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcdWriteControl
 This function is called by:
		_PathTo
		_ADCMain
 This function uses a non-reentrant model


 *************** function _lcdWriteControl *****************
 Defined at:
		line 5 in file "LCD.c"
 Parameters:    Size  Location     Type
  databyte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  databyte        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_lcdSetCursor
		_setupLCD
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    3[BANK0 ] unsigned char 
  product         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_PathTo
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 345 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ser.c
		_Drive         		CODE           	07D2	0000	41
		_ser_init      		CODE           	0EFC	0000	16
		_ser_getch     		CODE           	0EE6	0000	11
		_ser_putch     		CODE           	0EF0	0000	13
		_getSensorData 		CODE           	076B	0000	63
		_DriveDirect   		CODE           	0636	0000	142

ser.c estimated size: 286

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c
		___bmul        		CODE           	0F2B	0000	20

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c estimated size: 20

shared
		__stringtab    		STRING         	0800	0000	7
		__initialization		CODE           	0015	0000	76

shared estimated size: 83

ADC.c
		_setupADC      		CODE           	0F79	0000	23

ADC.c estimated size: 23

SPI.c
		_spi_transfer  		CODE           	0F0B	0000	16
		_setupSPI      		CODE           	0FA5	0000	26

SPI.c estimated size: 42

main.c
		_Drive1m       		CODE           	06C3	0000	105
		_Turn90        		CODE           	04F9	0000	162
		_main          		CODE           	059A	0000	157
		_TravelPath    		CODE           	03EF	0000	267
		_isr           		CODE           	0FDE	0000	35
		_PathTo        		CODE           	0064	0000	908

main.c estimated size: 1634

LCD.c
		_setupLCD      		CODE           	07A9	0000	42
		_lcdSetCursor  		CODE           	0EDD	0000	10
		_lcdWriteControl		CODE           	0F51	0000	21
		_lcdWriteData  		CODE           	0F3E	0000	20
		_lcdWriteString		CODE           	0FBE	0000	33

LCD.c estimated size: 126

