Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\iRobot_Maze.X.production.sym \
  --cmf=dist/default/production\iRobot_Maze.X.production.cmf -z -Q16F877A \
  -oC:\Users\Brendan\AppData\Local\Temp\srsk.2 \
  -Mdist/default/production/iRobot_Maze.X.production.map -E1 -ver=XC8 \
  -ASTACK=01B0h-01efh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Brendan\AppData\Local\Temp\srsk.obj \
  dist/default/production\iRobot_Maze.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Brendan\AppData\Local\Temp\srsk.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\iRobot_Maze.X.production.obj
                cinit                                15       15       49        8       0
                intentry                              4        4        E        8       0
                text12                              5B3      5B3       16      B66       0
                text11                              618      618       13      B66       0
                text10                              5F1      5F1       14      B66       0
                text9                               64B      64B        9      B66       0
                text8                               605      605       13      B66       0
                text7                               54C      54C       20        8       0
                text6                                5E       5E      319        8       0
                text5                               438      438       9B        8       0
                text4                               63C      63C        F      B66       0
                text3                               5DD      5DD       14      B66       0
                text2                               523      523       29        8       0
                text1                               56C      56C       19        8       0
                maintext                            377      377       C1        8       0
                cstackBANK0                          59       59       13       20       1
                cstackCOMMON                         70       70        6       70       1
                clrtext                             654      654        8      B66       0
                inittext                            62B      62B       11      B66       0
                dataBANK2                           110      110       50      110       1
                bssBANK3                            190      190       20      190       1
                dataBANK1                            C0       C0       14       A0       1
                bssBANK1                             A0       A0       20       A0       1
                dataBANK0                            42       42       17       20       1
                bssBANK0                             20       20       22       20       1
                bssCOMMON                            77       77        3       70       1
                bitbssCOMMON                        3B0       76        5       70       1     8
                strings                             59C      59C       17      B38       0
                idataBANK2                          4D3      4D3       50        8       0
                idataBANK1                          5C9      5C9       14      B66       0
                idataBANK0                          585      585       17        8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       49         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text12                              5B3      5B3       16         0
                text11                              618      618       13         0
                text10                              5F1      5F1       14         0
                text9                               64B      64B        9         0
                text8                               605      605       13         0
                text7                               54C      54C       20         0
                text6                                5E       5E      319         0
                text5                               438      438       9B         0
                text4                               63C      63C        F         0
                text3                               5DD      5DD       14         0
                text2                               523      523       29         0
                text1                               56C      56C       19         0
                maintext                            377      377       C1         0
                clrtext                             654      654        8         0
                inittext                            62B      62B       11         0
                idataBANK2                          4D3      4D3       50         0
                idataBANK1                          5C9      5C9       14         0
                idataBANK0                          585      585       17         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             59C      59C       17         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        6         1
                bssCOMMON                            77       77        3         1
                bitbssCOMMON                        3B0       76        5         1

        CLASS   BANK0          
                cstackBANK0                          59       59       13         1
                dataBANK0                            42       42       17         1
                bssBANK0                             20       20       22         1

        CLASS   BANK1          
                dataBANK1                            C0       C0       14         1
                bssBANK1                             A0       A0       20         1

        CLASS   BANK2          
                dataBANK2                           110      110       50         1

        CLASS   BANK3          
                bssBANK3                            190      190       20         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000598  00059C         8       0  CODE        2
                bssBANK0                       000020  00004C  00006C        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                bssBANK1                       0000A0  000034  0000D4        A0       1  BANK1       1
                dataBANK2                      000110  000050  000160       110       1  BANK2       1
                bssBANK3                       000190  000020  0001B0       190       1  BANK3       1
                strings                        00059C  000017  0005B3       B38       0  STRING      2
                text12                         0005B3  0000A9  00065C       B66       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006C-006F              4           1
        BANK1            00D4-00EF             1C           1
        BANK2            0160-016F             10           1
        BANK3            01B0-01EF             40           1
        CODE             0003-0003              1           2
                         065C-1FFF            800
        COMMON           007A-007D              4           1
        CONST            0003-0003              1           2
                         065C-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         065C-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006C-006F              4           1
                         00D4-00EF             1C
                         0160-016F             10
                         01B0-01EF             40
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            01B0-01EF             40           1
        STRCODE          0003-0003              1           2
                         065C-1FFF           19A4
        STRING           0003-0003              1           2
                         065C-1FFF            100

                                  Symbol Table

PathTo@loop                     cstackBANK0  0066
PathTo@sum                      cstackBANK0  0065
PathTo@x_target                 cstackBANK0  0064
PathTo@y_target                 cstackBANK0  005C
_ADCON0                         (abs)        001F
_ADCON1                         (abs)        009F
_ADRESH                         (abs)        001E
_ADRESL                         (abs)        009E
_GIE                            (abs)        005F
_GO                             (abs)        00FA
_LeftSpeedH                     bssBANK0     002C
_LeftSpeedL                     bssBANK0     002D
_OPTION_REG                     (abs)        0081
_PEIE                           (abs)        005E
_PORTA                          (abs)        0005
_PORTC                          (abs)        0007
_PORTD                          (abs)        0008
_PORTE                          (abs)        0009
_PathTo                         text6        005E
_RB0                            (abs)        0030
_RCIF                           (abs)        0065
_RCREG                          (abs)        001A
_RCSTA                          (abs)        0018
_RE0                            (abs)        0048
_RE1                            (abs)        0049
_RE2                            (abs)        004A
_RightSpeedH                    bssBANK0     002F
_RightSpeedL                    bssBANK0     0030
_SPBRG                          (abs)        0099
_SSPBUF                         (abs)        0013
_SSPCON                         (abs)        0014
_SSPIF                          (abs)        0063
_SSPSTAT                        (abs)        0094
_TMR0                           (abs)        0001
_TMR0IE                         (abs)        005D
_TMR0IF                         (abs)        005A
_TRISA                          (abs)        0085
_TRISB                          (abs)        0086
_TRISC                          (abs)        0087
_TRISD                          (abs)        0088
_TRISE                          (abs)        0089
_TRMT                           (abs)        04C1
_TXREG                          (abs)        0019
_TXSTA                          (abs)        0098
__CFG_BOREN$OFF                 (abs)        0000
__CFG_CP$OFF                    (abs)        0000
__CFG_CPD$OFF                   (abs)        0000
__CFG_FOSC$HS                   (abs)        0000
__CFG_LVP$OFF                   (abs)        0000
__CFG_PWRTE$OFF                 (abs)        0000
__CFG_WDTE$OFF                  (abs)        0000
__CFG_WRT$OFF                   (abs)        0000
__Habs1                         abs1         0000
__Hbank0                        bank0        0000
__Hbank1                        bank1        0000
__Hbank2                        bank2        0000
__Hbank3                        bank3        0000
__HbitbssCOMMON                 bitbssCOMMON 0000
__HbssBANK0                     bssBANK0     0000
__HbssBANK1                     bssBANK1     0000
__HbssBANK3                     bssBANK3     0000
__HbssCOMMON                    bssCOMMON    0000
__Hcinit                        cinit        005E
__Hclrtext                      clrtext      0000
__Hcode                         code         0000
__Hcommon                       common       0000
__Hconfig                       config       2008
__HcstackBANK0                  cstackBANK0  0000
__HcstackCOMMON                 cstackCOMMON 0000
__HdataBANK0                    dataBANK0    0000
__HdataBANK1                    dataBANK1    0000
__HdataBANK2                    dataBANK2    0000
__Heeprom_data                  eeprom_data  0000
__Hend_init                     end_init     0015
__Hfunctab                      functab      0000
__HidataBANK0                   idataBANK0   0000
__HidataBANK1                   idataBANK1   0000
__HidataBANK2                   idataBANK2   0000
__Hidloc                        idloc        0000
__Hinit                         init         0012
__Hinittext                     inittext     0000
__Hintentry                     intentry     0012
__Hmaintext                     maintext     0000
__Hpowerup                      powerup      0000
__Hram                          ram          0000
__Hreset_vec                    reset_vec    0003
__Hsfr0                         sfr0         0000
__Hsfr1                         sfr1         0000
__Hsfr2                         sfr2         0000
__Hsfr3                         sfr3         0000
__Hspace_0                      (abs)        2008
__Hspace_1                      (abs)        03B5
__Hspace_2                      (abs)        0000
__Hspace_3                      (abs)        0000
__Hstack                        stack        0000
__Hstrings                      strings      0000
__Htext                         text         0000
__Labs1                         abs1         0000
__Lbank0                        bank0        0000
__Lbank1                        bank1        0000
__Lbank2                        bank2        0000
__Lbank3                        bank3        0000
__LbitbssCOMMON                 bitbssCOMMON 0000
__LbssBANK0                     bssBANK0     0000
__LbssBANK1                     bssBANK1     0000
__LbssBANK3                     bssBANK3     0000
__LbssCOMMON                    bssCOMMON    0000
__Lcinit                        cinit        0015
__Lclrtext                      clrtext      0000
__Lcode                         code         0000
__Lcommon                       common       0000
__Lconfig                       config       2007
__LcstackBANK0                  cstackBANK0  0000
__LcstackCOMMON                 cstackCOMMON 0000
__LdataBANK0                    dataBANK0    0000
__LdataBANK1                    dataBANK1    0000
__LdataBANK2                    dataBANK2    0000
__Leeprom_data                  eeprom_data  0000
__Lend_init                     end_init     0012
__Lfunctab                      functab      0000
__LidataBANK0                   idataBANK0   0000
__LidataBANK1                   idataBANK1   0000
__LidataBANK2                   idataBANK2   0000
__Lidloc                        idloc        0000
__Linit                         init         0012
__Linittext                     inittext     0000
__Lintentry                     intentry     0004
__Lmaintext                     maintext     0000
__Lpowerup                      powerup      0000
__Lram                          ram          0000
__Lreset_vec                    reset_vec    0000
__Lsfr0                         sfr0         0000
__Lsfr1                         sfr1         0000
__Lsfr2                         sfr2         0000
__Lsfr3                         sfr3         0000
__Lspace_0                      (abs)        0000
__Lspace_1                      (abs)        0000
__Lspace_2                      (abs)        0000
__Lspace_3                      (abs)        0000
__Lstack                        stack        0000
__Lstrings                      strings      0000
__Ltext                         text         0000
__S0                            (abs)        2008
__S1                            (abs)        01B0
__S2                            (abs)        0000
__S3                            (abs)        0000
___bmul                         text11       0618
___bmul@multiplicand            cstackCOMMON 0074
___bmul@multiplier              cstackBANK0  005A
___bmul@product                 cstackBANK0  0059
___int_sp                       stack        0000
___latbits                      (abs)        0002
___sp                           stack        0000
__end_of_PathTo                 text6        0377
__end_of___bmul                 text11       062B
__end_of__initialization        cinit        005A
__end_of__stringtab             strings      05A2
__end_of_isr                    text12       05C9
__end_of_lcdSetCursor           text9        0654
__end_of_lcdWriteControl        text10       0605
__end_of_lcdWriteData           text8        0618
__end_of_lcdWriteString         text7        056C
__end_of_lcdWriteToDigitBCD     text5        04D3
__end_of_main                   maintext     0438
__end_of_ser_init               text4        064B
__end_of_setupADC               text3        05F1
__end_of_setupLCD               text2        054C
__end_of_setupSPI               text1        0585
__initialization                cinit        0015
__pbitbssCOMMON                 bitbssCOMMON 03B0
__pbssBANK0                     bssBANK0     0020
__pbssBANK1                     bssBANK1     00A0
__pbssBANK3                     bssBANK3     0190
__pbssCOMMON                    bssCOMMON    0077
__pcstackBANK0                  cstackBANK0  0059
__pcstackCOMMON                 cstackCOMMON 0070
__pdataBANK0                    dataBANK0    0042
__pdataBANK1                    dataBANK1    00C0
__pdataBANK2                    dataBANK2    0110
__pidataBANK0                   idataBANK0   0585
__pidataBANK1                   idataBANK1   05C9
__pidataBANK2                   idataBANK2   04D3
__pintentry                     intentry     0004
__pmaintext                     maintext     0377
__pstrings                      strings      059C
__ptext1                        text1        056C
__ptext10                       text10       05F1
__ptext11                       text11       0618
__ptext12                       text12       05B3
__ptext2                        text2        0523
__ptext3                        text3        05DD
__ptext4                        text4        063C
__ptext5                        text5        0438
__ptext6                        text6        005E
__ptext7                        text7        054C
__ptext8                        text8        0605
__ptext9                        text9        064B
__size_of_PathTo                (abs)        0000
__size_of___bmul                (abs)        0000
__size_of_isr                   (abs)        0000
__size_of_lcdSetCursor          (abs)        0000
__size_of_lcdWriteControl       (abs)        0000
__size_of_lcdWriteData          (abs)        0000
__size_of_lcdWriteString        (abs)        0000
__size_of_lcdWriteToDigitBCD    (abs)        0000
__size_of_main                  (abs)        0000
__size_of_ser_init              (abs)        0000
__size_of_setupADC              (abs)        0000
__size_of_setupLCD              (abs)        0000
__size_of_setupSPI              (abs)        0000
__stringbase                    strings      05A1
__stringtab                     strings      059C
_adcRAW                         bssBANK0     0024
_angle                          bssBANK0     0026
_c                              bssBANK0     0031
_distance                       bssBANK0     0028
_down                           bitbssCOMMON 03B0
_highByte                       bssBANK0     0041
_intersection_Orientation       bssBANK0     0032
_isr                            text12       05B3
_lcdSetCursor                   text9        064B
_lcdWriteControl                text10       05F1
_lcdWriteData                   text8        0605
_lcdWriteString                 text7        054C
_lcdWriteToDigitBCD             text5        0438
_left                           bitbssCOMMON 03B1
_lowByte                        bssBANK0     0033
_main                           maintext     0377
_mazeGrid                       dataBANK0    0042
_mazeGridDefault                dataBANK1    00C0
_orientation                    dataBANK0    0056
_orientation_path               bssBANK0     0034
_path                           bssBANK1     00A0
_pathCount                      bssBANK0     0035
_pathCountShortest              dataBANK0    0057
_r                              bssCOMMON    0077
_reset_flag                     bitbssCOMMON 03B2
_right                          bitbssCOMMON 03B3
_ser_init                       text4        063C
_setupADC                       text3        05DD
_setupLCD                       text2        0523
_setupSPI                       text1        056C
_shortest_path                  bssBANK3     0190
_squareWalls                    dataBANK2    0110
_time_count                     bssBANK0     002A
_up                             bitbssCOMMON 03B4
_x                              dataBANK0    0058
_x_int                          bssCOMMON    0078
_x_origin                       bssBANK0     003A
_x_path                         bssBANK0     003B
_y                              bssBANK0     003D
_y_int                          bssCOMMON    0079
_y_origin                       bssBANK0     003E
_y_path                         bssBANK0     003F
btemp                           (abs)        007E
clear_ram0                      clrtext      0654
end_of_initialization           cinit        005A
init_fetch0                     inittext     062B
init_ram0                       inittext     062F
interrupt_function              intentry     0004
intlevel0                       functab      0000
intlevel1                       functab      0000
intlevel2                       functab      0000
intlevel3                       functab      0000
intlevel4                       functab      0000
intlevel5                       functab      0000
lcdSetCursor@address            cstackBANK0  005A
lcdWriteControl@databyte        cstackBANK0  0059
lcdWriteData@databyte           cstackBANK0  0059
lcdWriteString@s                cstackBANK0  005B
lcdWriteToDigitBCD@HunsDigit    cstackBANK0  005E
lcdWriteToDigitBCD@OnesDigit    cstackBANK0  0064
lcdWriteToDigitBCD@TenThouDigit cstackBANK0  0062
lcdWriteToDigitBCD@TensDigit    cstackBANK0  005C
lcdWriteToDigitBCD@ThouDigit    cstackBANK0  0060
lcdWriteToDigitBCD@data         cstackBANK0  005A
ltemp                           (abs)        007E
ltemp0                          (abs)        007E
ltemp1                          (abs)        0082
ltemp2                          (abs)        0086
ltemp3                          (abs)        0080
main@n                          cstackBANK0  006B
reset_vec                       reset_vec    0000
saved_w                         (abs)        007E
stackhi                         (abs)        0000
stacklo                         (abs)        0000
start                           init         0012
start_initialization            cinit        0015
ttemp                           (abs)        007E
ttemp0                          (abs)        007E
ttemp1                          (abs)        0081
ttemp2                          (abs)        0084
ttemp3                          (abs)        0087
ttemp4                          (abs)        007F
wtemp                           (abs)        007E
wtemp0                          (abs)        007E
wtemp1                          (abs)        0080
wtemp2                          (abs)        0082
wtemp3                          (abs)        0084
wtemp4                          (abs)        0086
wtemp5                          (abs)        0088
wtemp6                          (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 253 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  n               1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_PathTo
		_lcdSetCursor
		_lcdWriteControl
		_lcdWriteData
		_lcdWriteString
		_lcdWriteToDigitBCD
		_ser_init
		_setupADC
		_setupLCD
		_setupSPI
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _setupSPI *****************
 Defined at:
		line 4 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupLCD *****************
 Defined at:
		line 86 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcdWriteControl
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupADC *****************
 Defined at:
		line 5 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ser_init *****************
 Defined at:
		line 5 in file "ser.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcdWriteToDigitBCD *****************
 Defined at:
		line 38 in file "LCD.c"
 Parameters:    Size  Location     Type
  data            2    1[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  OnesDigit       2   11[BANK0 ] unsigned int 
  TenThouDigit    2    9[BANK0 ] unsigned int 
  ThouDigit       2    7[BANK0 ] unsigned int 
  HunsDigit       2    5[BANK0 ] unsigned int 
  TensDigit       2    3[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0      10       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcdWriteData
 This function is called by:
		_main
		_ADCMain
 This function uses a non-reentrant model


 *************** function _PathTo *****************
 Defined at:
		line 65 in file "main.c"
 Parameters:    Size  Location     Type
  x_target        1    wreg     unsigned char 
  y_target        1    3[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  x_target        1   11[BANK0 ] unsigned char 
  sum             1   12[BANK0 ] unsigned char 
  loop            2   13[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       7       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___bmul
		_lcdSetCursor
		_lcdWriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcdWriteString *****************
 Defined at:
		line 32 in file "LCD.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR unsigned char 
		 -> STR_3(3), STR_2(3), STR_1(11), 
 Auto vars:     Size  Location     Type
  s               1    2[BANK0 ] PTR unsigned char 
		 -> STR_3(3), STR_2(3), STR_1(11), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcdWriteData
 This function is called by:
		_PathTo
		_main
 This function uses a non-reentrant model


 *************** function _lcdWriteData *****************
 Defined at:
		line 16 in file "LCD.c"
 Parameters:    Size  Location     Type
  databyte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  databyte        1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       1       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_lcdWriteString
		_lcdWriteToDigitBCD
 This function uses a non-reentrant model


 *************** function _lcdSetCursor *****************
 Defined at:
		line 27 in file "LCD.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  address         1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_lcdWriteControl
 This function is called by:
		_PathTo
		_main
		_ADCMain
 This function uses a non-reentrant model


 *************** function _lcdWriteControl *****************
 Defined at:
		line 5 in file "LCD.c"
 Parameters:    Size  Location     Type
  databyte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  databyte        1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       1       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_lcdSetCursor
		_setupLCD
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    1[BANK0 ] unsigned char 
  product         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       2       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_PathTo
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 238 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ser.c
		_ser_init      		CODE           	063C	0000	16

ser.c estimated size: 16

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c
		___bmul        		CODE           	0618	0000	20

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c estimated size: 20

shared
		__stringtab    		STRING         	059C	0000	7
		__initialization		CODE           	0015	0000	70

shared estimated size: 77

ADC.c
		_setupADC      		CODE           	05DD	0000	21

ADC.c estimated size: 21

SPI.c
		_setupSPI      		CODE           	056C	0000	26

SPI.c estimated size: 26

main.c
		_main          		CODE           	0377	0000	194
		_isr           		CODE           	05B3	0000	23
		_PathTo        		CODE           	005E	0000	794

main.c estimated size: 1011

LCD.c
		_setupLCD      		CODE           	0523	0000	42
		_lcdSetCursor  		CODE           	064B	0000	10
		_lcdWriteControl		CODE           	05F1	0000	21
		_lcdWriteData  		CODE           	0605	0000	20
		_lcdWriteToDigitBCD		CODE           	0438	0000	156
		_lcdWriteString		CODE           	054C	0000	33

LCD.c estimated size: 282

